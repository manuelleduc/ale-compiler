/**
 * generated by Xtext 2.10.0
 */
package ale.xtext.ale;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see ale.xtext.ale.AleFactory
 * @model kind="package"
 * @generated
 */
public interface AlePackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "ale";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.ale/Ale";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "ale";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  AlePackage eINSTANCE = ale.xtext.ale.impl.AlePackageImpl.init();

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.RootImpl <em>Root</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.RootImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getRoot()
   * @generated
   */
  int ROOT = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROOT__NAME = 0;

  /**
   * The feature id for the '<em><b>Imports</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROOT__IMPORTS = 1;

  /**
   * The feature id for the '<em><b>Classes</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROOT__CLASSES = 2;

  /**
   * The number of structural features of the '<em>Root</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROOT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.ImportImpl <em>Import</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.ImportImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getImport()
   * @generated
   */
  int IMPORT = 1;

  /**
   * The feature id for the '<em><b>Ref</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT__REF = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT__NAME = 1;

  /**
   * The number of structural features of the '<em>Import</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.AleClassImpl <em>Class</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.AleClassImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getAleClass()
   * @generated
   */
  int ALE_CLASS = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALE_CLASS__NAME = 0;

  /**
   * The feature id for the '<em><b>Super Class</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALE_CLASS__SUPER_CLASS = 1;

  /**
   * The feature id for the '<em><b>Fields</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALE_CLASS__FIELDS = 2;

  /**
   * The feature id for the '<em><b>Methods</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALE_CLASS__METHODS = 3;

  /**
   * The number of structural features of the '<em>Class</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALE_CLASS_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.SymbolImpl <em>Symbol</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.SymbolImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getSymbol()
   * @generated
   */
  int SYMBOL = 10;

  /**
   * The number of structural features of the '<em>Symbol</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SYMBOL_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.FieldImpl <em>Field</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.FieldImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getField()
   * @generated
   */
  int FIELD = 3;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD__TYPE = SYMBOL_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD__NAME = SYMBOL_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Field</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_FEATURE_COUNT = SYMBOL_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.MethodImpl <em>Method</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.MethodImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getMethod()
   * @generated
   */
  int METHOD = 4;

  /**
   * The feature id for the '<em><b>Tags</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__TAGS = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__TYPE = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__NAME = 2;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__PARAMS = 3;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD__BLOCK = 4;

  /**
   * The number of structural features of the '<em>Method</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int METHOD_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.DefMethodImpl <em>Def Method</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.DefMethodImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getDefMethod()
   * @generated
   */
  int DEF_METHOD = 5;

  /**
   * The feature id for the '<em><b>Tags</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEF_METHOD__TAGS = METHOD__TAGS;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEF_METHOD__TYPE = METHOD__TYPE;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEF_METHOD__NAME = METHOD__NAME;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEF_METHOD__PARAMS = METHOD__PARAMS;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEF_METHOD__BLOCK = METHOD__BLOCK;

  /**
   * The number of structural features of the '<em>Def Method</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEF_METHOD_FEATURE_COUNT = METHOD_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.OverrideMethodImpl <em>Override Method</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.OverrideMethodImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getOverrideMethod()
   * @generated
   */
  int OVERRIDE_METHOD = 6;

  /**
   * The feature id for the '<em><b>Tags</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OVERRIDE_METHOD__TAGS = METHOD__TAGS;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OVERRIDE_METHOD__TYPE = METHOD__TYPE;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OVERRIDE_METHOD__NAME = METHOD__NAME;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OVERRIDE_METHOD__PARAMS = METHOD__PARAMS;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OVERRIDE_METHOD__BLOCK = METHOD__BLOCK;

  /**
   * The number of structural features of the '<em>Override Method</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OVERRIDE_METHOD_FEATURE_COUNT = METHOD_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.StatementImpl <em>Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.StatementImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getStatement()
   * @generated
   */
  int STATEMENT = 7;

  /**
   * The number of structural features of the '<em>Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FEATURE_COUNT = SYMBOL_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.BlockImpl <em>Block</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.BlockImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getBlock()
   * @generated
   */
  int BLOCK = 8;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__BODY = 0;

  /**
   * The number of structural features of the '<em>Block</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.ExpressionImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 9;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.ParamCallImpl <em>Param Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.ParamCallImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getParamCall()
   * @generated
   */
  int PARAM_CALL = 11;

  /**
   * The feature id for the '<em><b>Lambda</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAM_CALL__LAMBDA = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAM_CALL__EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Param Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAM_CALL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.ParamImpl <em>Param</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.ParamImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getParam()
   * @generated
   */
  int PARAM = 12;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAM__TYPE = SYMBOL_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAM__NAME = SYMBOL_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Param</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAM_FEATURE_COUNT = SYMBOL_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.TypeImpl <em>Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.TypeImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getType()
   * @generated
   */
  int TYPE = 13;

  /**
   * The number of structural features of the '<em>Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.LiteralTypeImpl <em>Literal Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.LiteralTypeImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getLiteralType()
   * @generated
   */
  int LITERAL_TYPE = 14;

  /**
   * The feature id for the '<em><b>Lit</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_TYPE__LIT = TYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Literal Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_TYPE_FEATURE_COUNT = TYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.TypeSystemImpl <em>Type System</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.TypeSystemImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getTypeSystem()
   * @generated
   */
  int TYPE_SYSTEM = 15;

  /**
   * The number of structural features of the '<em>Type System</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_SYSTEM_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.OpenClassImpl <em>Open Class</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.OpenClassImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getOpenClass()
   * @generated
   */
  int OPEN_CLASS = 16;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPEN_CLASS__NAME = ALE_CLASS__NAME;

  /**
   * The feature id for the '<em><b>Super Class</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPEN_CLASS__SUPER_CLASS = ALE_CLASS__SUPER_CLASS;

  /**
   * The feature id for the '<em><b>Fields</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPEN_CLASS__FIELDS = ALE_CLASS__FIELDS;

  /**
   * The feature id for the '<em><b>Methods</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPEN_CLASS__METHODS = ALE_CLASS__METHODS;

  /**
   * The number of structural features of the '<em>Open Class</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPEN_CLASS_FEATURE_COUNT = ALE_CLASS_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.NewClassImpl <em>New Class</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.NewClassImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getNewClass()
   * @generated
   */
  int NEW_CLASS = 17;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEW_CLASS__NAME = ALE_CLASS__NAME;

  /**
   * The feature id for the '<em><b>Super Class</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEW_CLASS__SUPER_CLASS = ALE_CLASS__SUPER_CLASS;

  /**
   * The feature id for the '<em><b>Fields</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEW_CLASS__FIELDS = ALE_CLASS__FIELDS;

  /**
   * The feature id for the '<em><b>Methods</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEW_CLASS__METHODS = ALE_CLASS__METHODS;

  /**
   * The number of structural features of the '<em>New Class</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEW_CLASS_FEATURE_COUNT = ALE_CLASS_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.ReturnStatementImpl <em>Return Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.ReturnStatementImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getReturnStatement()
   * @generated
   */
  int RETURN_STATEMENT = 18;

  /**
   * The feature id for the '<em><b>Returned</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_STATEMENT__RETURNED = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Return Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.LetStatementImpl <em>Let Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.LetStatementImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getLetStatement()
   * @generated
   */
  int LET_STATEMENT = 19;

  /**
   * The feature id for the '<em><b>Bindings</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LET_STATEMENT__BINDINGS = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LET_STATEMENT__BLOCK = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Let Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LET_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.IfStatementImpl <em>If Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.IfStatementImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getIfStatement()
   * @generated
   */
  int IF_STATEMENT = 20;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__CONDITION = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Then Branch</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__THEN_BRANCH = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Else Branch</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__ELSE_BRANCH = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>If Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.WhileStatementImpl <em>While Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.WhileStatementImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getWhileStatement()
   * @generated
   */
  int WHILE_STATEMENT = 21;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_STATEMENT__CONDITION = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>While Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_STATEMENT__WHILE_BLOCK = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>While Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.ForLoopImpl <em>For Loop</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.ForLoopImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getForLoop()
   * @generated
   */
  int FOR_LOOP = 22;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_LOOP__TYPE = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_LOOP__NAME = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Collection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_LOOP__COLLECTION = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_LOOP__BLOCK = STATEMENT_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>For Loop</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_LOOP_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.VarAssignImpl <em>Var Assign</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.VarAssignImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getVarAssign()
   * @generated
   */
  int VAR_ASSIGN = 23;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_ASSIGN__TYPE = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_ASSIGN__NAME = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_ASSIGN__VALUE = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Var Assign</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_ASSIGN_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.ImpliesOperationImpl <em>Implies Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.ImpliesOperationImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getImpliesOperation()
   * @generated
   */
  int IMPLIES_OPERATION = 24;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPLIES_OPERATION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPLIES_OPERATION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Implies Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPLIES_OPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.BooleanOrOperationImpl <em>Boolean Or Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.BooleanOrOperationImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getBooleanOrOperation()
   * @generated
   */
  int BOOLEAN_OR_OPERATION = 25;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_OR_OPERATION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_OR_OPERATION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Boolean Or Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_OR_OPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.BooleanAndOperationImpl <em>Boolean And Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.BooleanAndOperationImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getBooleanAndOperation()
   * @generated
   */
  int BOOLEAN_AND_OPERATION = 26;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_AND_OPERATION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_AND_OPERATION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Boolean And Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_AND_OPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.BooleanXorOperationImpl <em>Boolean Xor Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.BooleanXorOperationImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getBooleanXorOperation()
   * @generated
   */
  int BOOLEAN_XOR_OPERATION = 27;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_XOR_OPERATION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_XOR_OPERATION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Boolean Xor Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_XOR_OPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.CompareLEOperationImpl <em>Compare LE Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.CompareLEOperationImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getCompareLEOperation()
   * @generated
   */
  int COMPARE_LE_OPERATION = 28;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_LE_OPERATION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_LE_OPERATION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Compare LE Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_LE_OPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.CompareGEOperationImpl <em>Compare GE Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.CompareGEOperationImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getCompareGEOperation()
   * @generated
   */
  int COMPARE_GE_OPERATION = 29;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_GE_OPERATION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_GE_OPERATION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Compare GE Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_GE_OPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.CompareNEOperationImpl <em>Compare NE Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.CompareNEOperationImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getCompareNEOperation()
   * @generated
   */
  int COMPARE_NE_OPERATION = 30;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_NE_OPERATION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_NE_OPERATION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Compare NE Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_NE_OPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.CompareLOperationImpl <em>Compare LOperation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.CompareLOperationImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getCompareLOperation()
   * @generated
   */
  int COMPARE_LOPERATION = 31;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_LOPERATION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_LOPERATION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Compare LOperation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_LOPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.CompareGOperationImpl <em>Compare GOperation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.CompareGOperationImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getCompareGOperation()
   * @generated
   */
  int COMPARE_GOPERATION = 32;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_GOPERATION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_GOPERATION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Compare GOperation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_GOPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.EqualityOperationImpl <em>Equality Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.EqualityOperationImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getEqualityOperation()
   * @generated
   */
  int EQUALITY_OPERATION = 33;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY_OPERATION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY_OPERATION__OP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY_OPERATION__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Equality Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY_OPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.MultOperationImpl <em>Mult Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.MultOperationImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getMultOperation()
   * @generated
   */
  int MULT_OPERATION = 34;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_OPERATION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_OPERATION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Mult Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULT_OPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.DivOperationImpl <em>Div Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.DivOperationImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getDivOperation()
   * @generated
   */
  int DIV_OPERATION = 35;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIV_OPERATION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIV_OPERATION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Div Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIV_OPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.AddOperationImpl <em>Add Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.AddOperationImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getAddOperation()
   * @generated
   */
  int ADD_OPERATION = 36;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OPERATION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OPERATION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Add Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.SubOperationImpl <em>Sub Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.SubOperationImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getSubOperation()
   * @generated
   */
  int SUB_OPERATION = 37;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUB_OPERATION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUB_OPERATION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Sub Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUB_OPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.ChainedCallImpl <em>Chained Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.ChainedCallImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getChainedCall()
   * @generated
   */
  int CHAINED_CALL = 38;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAINED_CALL__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAINED_CALL__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Chained Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAINED_CALL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.ChainedCallArrowImpl <em>Chained Call Arrow</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.ChainedCallArrowImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getChainedCallArrow()
   * @generated
   */
  int CHAINED_CALL_ARROW = 39;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAINED_CALL_ARROW__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAINED_CALL_ARROW__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Chained Call Arrow</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAINED_CALL_ARROW_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.NotInfixOperationImpl <em>Not Infix Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.NotInfixOperationImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getNotInfixOperation()
   * @generated
   */
  int NOT_INFIX_OPERATION = 40;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_INFIX_OPERATION__EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Not Infix Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_INFIX_OPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.NegInfixOperationImpl <em>Neg Infix Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.NegInfixOperationImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getNegInfixOperation()
   * @generated
   */
  int NEG_INFIX_OPERATION = 41;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEG_INFIX_OPERATION__EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Neg Infix Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEG_INFIX_OPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.ConstructorOperationImpl <em>Constructor Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.ConstructorOperationImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getConstructorOperation()
   * @generated
   */
  int CONSTRUCTOR_OPERATION = 42;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRUCTOR_OPERATION__NAME = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Constructor Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRUCTOR_OPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.OperationCallOperationImpl <em>Operation Call Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.OperationCallOperationImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getOperationCallOperation()
   * @generated
   */
  int OPERATION_CALL_OPERATION = 43;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CALL_OPERATION__NAME = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CALL_OPERATION__PARAMETERS = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Operation Call Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CALL_OPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.SelfRefImpl <em>Self Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.SelfRefImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getSelfRef()
   * @generated
   */
  int SELF_REF = 44;

  /**
   * The number of structural features of the '<em>Self Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELF_REF_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.SuperRefImpl <em>Super Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.SuperRefImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getSuperRef()
   * @generated
   */
  int SUPER_REF = 45;

  /**
   * The number of structural features of the '<em>Super Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUPER_REF_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.StringLiteralImpl <em>String Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.StringLiteralImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getStringLiteral()
   * @generated
   */
  int STRING_LITERAL = 46;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>String Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.IntLiteralImpl <em>Int Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.IntLiteralImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getIntLiteral()
   * @generated
   */
  int INT_LITERAL = 47;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_LITERAL__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Int Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_LITERAL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.RealLiteralImpl <em>Real Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.RealLiteralImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getRealLiteral()
   * @generated
   */
  int REAL_LITERAL = 48;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REAL_LITERAL__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Real Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REAL_LITERAL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.BooleanLiteralImpl <em>Boolean Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.BooleanLiteralImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getBooleanLiteral()
   * @generated
   */
  int BOOLEAN_LITERAL = 49;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Boolean Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.NullLiteralImpl <em>Null Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.NullLiteralImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getNullLiteral()
   * @generated
   */
  int NULL_LITERAL = 50;

  /**
   * The number of structural features of the '<em>Null Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NULL_LITERAL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.IntRangeImpl <em>Int Range</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.IntRangeImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getIntRange()
   * @generated
   */
  int INT_RANGE = 51;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_RANGE__START = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Stop</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_RANGE__STOP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Int Range</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_RANGE_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.SequenceDeclImpl <em>Sequence Decl</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.SequenceDeclImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getSequenceDecl()
   * @generated
   */
  int SEQUENCE_DECL = 52;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_DECL__EXPRESSIONS = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Sequence Decl</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_DECL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.OrderedSetDeclImpl <em>Ordered Set Decl</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.OrderedSetDeclImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getOrderedSetDecl()
   * @generated
   */
  int ORDERED_SET_DECL = 53;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDERED_SET_DECL__EXPRESSIONS = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Ordered Set Decl</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDERED_SET_DECL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.VarRefImpl <em>Var Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.VarRefImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getVarRef()
   * @generated
   */
  int VAR_REF = 54;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_REF__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Var Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_REF_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.OutOfScopeTypeImpl <em>Out Of Scope Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.OutOfScopeTypeImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getOutOfScopeType()
   * @generated
   */
  int OUT_OF_SCOPE_TYPE = 55;

  /**
   * The feature id for the '<em><b>External Class</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUT_OF_SCOPE_TYPE__EXTERNAL_CLASS = TYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Out Of Scope Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUT_OF_SCOPE_TYPE_FEATURE_COUNT = TYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.SequenceTypeImpl <em>Sequence Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.SequenceTypeImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getSequenceType()
   * @generated
   */
  int SEQUENCE_TYPE = 56;

  /**
   * The feature id for the '<em><b>Sub Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_TYPE__SUB_TYPE = TYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Sequence Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_TYPE_FEATURE_COUNT = TYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.OrderedSetTypeImpl <em>Ordered Set Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.OrderedSetTypeImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getOrderedSetType()
   * @generated
   */
  int ORDERED_SET_TYPE = 57;

  /**
   * The feature id for the '<em><b>Sub Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDERED_SET_TYPE__SUB_TYPE = TYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Ordered Set Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDERED_SET_TYPE_FEATURE_COUNT = TYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.BooleanTypeTImpl <em>Boolean Type T</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.BooleanTypeTImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getBooleanTypeT()
   * @generated
   */
  int BOOLEAN_TYPE_T = 58;

  /**
   * The number of structural features of the '<em>Boolean Type T</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_TYPE_T_FEATURE_COUNT = TYPE_SYSTEM_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.RealTypeTImpl <em>Real Type T</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.RealTypeTImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getRealTypeT()
   * @generated
   */
  int REAL_TYPE_T = 59;

  /**
   * The number of structural features of the '<em>Real Type T</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REAL_TYPE_T_FEATURE_COUNT = TYPE_SYSTEM_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.IntTypeTImpl <em>Int Type T</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.IntTypeTImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getIntTypeT()
   * @generated
   */
  int INT_TYPE_T = 60;

  /**
   * The number of structural features of the '<em>Int Type T</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_TYPE_T_FEATURE_COUNT = TYPE_SYSTEM_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.StringTypeTImpl <em>String Type T</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.StringTypeTImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getStringTypeT()
   * @generated
   */
  int STRING_TYPE_T = 61;

  /**
   * The number of structural features of the '<em>String Type T</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_TYPE_T_FEATURE_COUNT = TYPE_SYSTEM_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.NullTypeTImpl <em>Null Type T</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.NullTypeTImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getNullTypeT()
   * @generated
   */
  int NULL_TYPE_T = 62;

  /**
   * The number of structural features of the '<em>Null Type T</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NULL_TYPE_T_FEATURE_COUNT = TYPE_SYSTEM_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.SequenceTypeTImpl <em>Sequence Type T</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.SequenceTypeTImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getSequenceTypeT()
   * @generated
   */
  int SEQUENCE_TYPE_T = 63;

  /**
   * The feature id for the '<em><b>Sub Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_TYPE_T__SUB_TYPE = TYPE_SYSTEM_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Sequence Type T</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_TYPE_T_FEATURE_COUNT = TYPE_SYSTEM_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link ale.xtext.ale.impl.ClassTypeTImpl <em>Class Type T</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ale.xtext.ale.impl.ClassTypeTImpl
   * @see ale.xtext.ale.impl.AlePackageImpl#getClassTypeT()
   * @generated
   */
  int CLASS_TYPE_T = 64;

  /**
   * The feature id for the '<em><b>Clazz</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_TYPE_T__CLAZZ = TYPE_SYSTEM_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Class Type T</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_TYPE_T_FEATURE_COUNT = TYPE_SYSTEM_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link ale.xtext.ale.Root <em>Root</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Root</em>'.
   * @see ale.xtext.ale.Root
   * @generated
   */
  EClass getRoot();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.Root#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ale.xtext.ale.Root#getName()
   * @see #getRoot()
   * @generated
   */
  EAttribute getRoot_Name();

  /**
   * Returns the meta object for the containment reference list '{@link ale.xtext.ale.Root#getImports <em>Imports</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Imports</em>'.
   * @see ale.xtext.ale.Root#getImports()
   * @see #getRoot()
   * @generated
   */
  EReference getRoot_Imports();

  /**
   * Returns the meta object for the containment reference list '{@link ale.xtext.ale.Root#getClasses <em>Classes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Classes</em>'.
   * @see ale.xtext.ale.Root#getClasses()
   * @see #getRoot()
   * @generated
   */
  EReference getRoot_Classes();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.Import <em>Import</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Import</em>'.
   * @see ale.xtext.ale.Import
   * @generated
   */
  EClass getImport();

  /**
   * Returns the meta object for the reference '{@link ale.xtext.ale.Import#getRef <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Ref</em>'.
   * @see ale.xtext.ale.Import#getRef()
   * @see #getImport()
   * @generated
   */
  EReference getImport_Ref();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.Import#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ale.xtext.ale.Import#getName()
   * @see #getImport()
   * @generated
   */
  EAttribute getImport_Name();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.AleClass <em>Class</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Class</em>'.
   * @see ale.xtext.ale.AleClass
   * @generated
   */
  EClass getAleClass();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.AleClass#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ale.xtext.ale.AleClass#getName()
   * @see #getAleClass()
   * @generated
   */
  EAttribute getAleClass_Name();

  /**
   * Returns the meta object for the reference list '{@link ale.xtext.ale.AleClass#getSuperClass <em>Super Class</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Super Class</em>'.
   * @see ale.xtext.ale.AleClass#getSuperClass()
   * @see #getAleClass()
   * @generated
   */
  EReference getAleClass_SuperClass();

  /**
   * Returns the meta object for the containment reference list '{@link ale.xtext.ale.AleClass#getFields <em>Fields</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fields</em>'.
   * @see ale.xtext.ale.AleClass#getFields()
   * @see #getAleClass()
   * @generated
   */
  EReference getAleClass_Fields();

  /**
   * Returns the meta object for the containment reference list '{@link ale.xtext.ale.AleClass#getMethods <em>Methods</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Methods</em>'.
   * @see ale.xtext.ale.AleClass#getMethods()
   * @see #getAleClass()
   * @generated
   */
  EReference getAleClass_Methods();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.Field <em>Field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Field</em>'.
   * @see ale.xtext.ale.Field
   * @generated
   */
  EClass getField();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.Field#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see ale.xtext.ale.Field#getType()
   * @see #getField()
   * @generated
   */
  EReference getField_Type();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.Field#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ale.xtext.ale.Field#getName()
   * @see #getField()
   * @generated
   */
  EAttribute getField_Name();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.Method <em>Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Method</em>'.
   * @see ale.xtext.ale.Method
   * @generated
   */
  EClass getMethod();

  /**
   * Returns the meta object for the attribute list '{@link ale.xtext.ale.Method#getTags <em>Tags</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Tags</em>'.
   * @see ale.xtext.ale.Method#getTags()
   * @see #getMethod()
   * @generated
   */
  EAttribute getMethod_Tags();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.Method#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see ale.xtext.ale.Method#getType()
   * @see #getMethod()
   * @generated
   */
  EReference getMethod_Type();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.Method#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ale.xtext.ale.Method#getName()
   * @see #getMethod()
   * @generated
   */
  EAttribute getMethod_Name();

  /**
   * Returns the meta object for the containment reference list '{@link ale.xtext.ale.Method#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Params</em>'.
   * @see ale.xtext.ale.Method#getParams()
   * @see #getMethod()
   * @generated
   */
  EReference getMethod_Params();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.Method#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see ale.xtext.ale.Method#getBlock()
   * @see #getMethod()
   * @generated
   */
  EReference getMethod_Block();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.DefMethod <em>Def Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Def Method</em>'.
   * @see ale.xtext.ale.DefMethod
   * @generated
   */
  EClass getDefMethod();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.OverrideMethod <em>Override Method</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Override Method</em>'.
   * @see ale.xtext.ale.OverrideMethod
   * @generated
   */
  EClass getOverrideMethod();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.Statement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Statement</em>'.
   * @see ale.xtext.ale.Statement
   * @generated
   */
  EClass getStatement();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.Block <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block</em>'.
   * @see ale.xtext.ale.Block
   * @generated
   */
  EClass getBlock();

  /**
   * Returns the meta object for the containment reference list '{@link ale.xtext.ale.Block#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Body</em>'.
   * @see ale.xtext.ale.Block#getBody()
   * @see #getBlock()
   * @generated
   */
  EReference getBlock_Body();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see ale.xtext.ale.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.Symbol <em>Symbol</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Symbol</em>'.
   * @see ale.xtext.ale.Symbol
   * @generated
   */
  EClass getSymbol();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.ParamCall <em>Param Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Param Call</em>'.
   * @see ale.xtext.ale.ParamCall
   * @generated
   */
  EClass getParamCall();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.ParamCall#getLambda <em>Lambda</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Lambda</em>'.
   * @see ale.xtext.ale.ParamCall#getLambda()
   * @see #getParamCall()
   * @generated
   */
  EAttribute getParamCall_Lambda();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.ParamCall#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see ale.xtext.ale.ParamCall#getExpression()
   * @see #getParamCall()
   * @generated
   */
  EReference getParamCall_Expression();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.Param <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Param</em>'.
   * @see ale.xtext.ale.Param
   * @generated
   */
  EClass getParam();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.Param#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see ale.xtext.ale.Param#getType()
   * @see #getParam()
   * @generated
   */
  EReference getParam_Type();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.Param#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ale.xtext.ale.Param#getName()
   * @see #getParam()
   * @generated
   */
  EAttribute getParam_Name();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.Type <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type</em>'.
   * @see ale.xtext.ale.Type
   * @generated
   */
  EClass getType();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.LiteralType <em>Literal Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Literal Type</em>'.
   * @see ale.xtext.ale.LiteralType
   * @generated
   */
  EClass getLiteralType();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.LiteralType#getLit <em>Lit</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Lit</em>'.
   * @see ale.xtext.ale.LiteralType#getLit()
   * @see #getLiteralType()
   * @generated
   */
  EAttribute getLiteralType_Lit();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.TypeSystem <em>Type System</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type System</em>'.
   * @see ale.xtext.ale.TypeSystem
   * @generated
   */
  EClass getTypeSystem();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.OpenClass <em>Open Class</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Open Class</em>'.
   * @see ale.xtext.ale.OpenClass
   * @generated
   */
  EClass getOpenClass();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.NewClass <em>New Class</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>New Class</em>'.
   * @see ale.xtext.ale.NewClass
   * @generated
   */
  EClass getNewClass();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.ReturnStatement <em>Return Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Return Statement</em>'.
   * @see ale.xtext.ale.ReturnStatement
   * @generated
   */
  EClass getReturnStatement();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.ReturnStatement#getReturned <em>Returned</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Returned</em>'.
   * @see ale.xtext.ale.ReturnStatement#getReturned()
   * @see #getReturnStatement()
   * @generated
   */
  EReference getReturnStatement_Returned();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.LetStatement <em>Let Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Let Statement</em>'.
   * @see ale.xtext.ale.LetStatement
   * @generated
   */
  EClass getLetStatement();

  /**
   * Returns the meta object for the containment reference list '{@link ale.xtext.ale.LetStatement#getBindings <em>Bindings</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Bindings</em>'.
   * @see ale.xtext.ale.LetStatement#getBindings()
   * @see #getLetStatement()
   * @generated
   */
  EReference getLetStatement_Bindings();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.LetStatement#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see ale.xtext.ale.LetStatement#getBlock()
   * @see #getLetStatement()
   * @generated
   */
  EReference getLetStatement_Block();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.IfStatement <em>If Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>If Statement</em>'.
   * @see ale.xtext.ale.IfStatement
   * @generated
   */
  EClass getIfStatement();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.IfStatement#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see ale.xtext.ale.IfStatement#getCondition()
   * @see #getIfStatement()
   * @generated
   */
  EReference getIfStatement_Condition();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.IfStatement#getThenBranch <em>Then Branch</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Then Branch</em>'.
   * @see ale.xtext.ale.IfStatement#getThenBranch()
   * @see #getIfStatement()
   * @generated
   */
  EReference getIfStatement_ThenBranch();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.IfStatement#getElseBranch <em>Else Branch</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Else Branch</em>'.
   * @see ale.xtext.ale.IfStatement#getElseBranch()
   * @see #getIfStatement()
   * @generated
   */
  EReference getIfStatement_ElseBranch();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.WhileStatement <em>While Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>While Statement</em>'.
   * @see ale.xtext.ale.WhileStatement
   * @generated
   */
  EClass getWhileStatement();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.WhileStatement#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see ale.xtext.ale.WhileStatement#getCondition()
   * @see #getWhileStatement()
   * @generated
   */
  EReference getWhileStatement_Condition();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.WhileStatement#getWhileBlock <em>While Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>While Block</em>'.
   * @see ale.xtext.ale.WhileStatement#getWhileBlock()
   * @see #getWhileStatement()
   * @generated
   */
  EReference getWhileStatement_WhileBlock();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.ForLoop <em>For Loop</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>For Loop</em>'.
   * @see ale.xtext.ale.ForLoop
   * @generated
   */
  EClass getForLoop();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.ForLoop#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see ale.xtext.ale.ForLoop#getType()
   * @see #getForLoop()
   * @generated
   */
  EReference getForLoop_Type();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.ForLoop#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ale.xtext.ale.ForLoop#getName()
   * @see #getForLoop()
   * @generated
   */
  EAttribute getForLoop_Name();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.ForLoop#getCollection <em>Collection</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Collection</em>'.
   * @see ale.xtext.ale.ForLoop#getCollection()
   * @see #getForLoop()
   * @generated
   */
  EReference getForLoop_Collection();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.ForLoop#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see ale.xtext.ale.ForLoop#getBlock()
   * @see #getForLoop()
   * @generated
   */
  EReference getForLoop_Block();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.VarAssign <em>Var Assign</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Assign</em>'.
   * @see ale.xtext.ale.VarAssign
   * @generated
   */
  EClass getVarAssign();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.VarAssign#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see ale.xtext.ale.VarAssign#getType()
   * @see #getVarAssign()
   * @generated
   */
  EReference getVarAssign_Type();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.VarAssign#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ale.xtext.ale.VarAssign#getName()
   * @see #getVarAssign()
   * @generated
   */
  EAttribute getVarAssign_Name();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.VarAssign#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see ale.xtext.ale.VarAssign#getValue()
   * @see #getVarAssign()
   * @generated
   */
  EReference getVarAssign_Value();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.ImpliesOperation <em>Implies Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Implies Operation</em>'.
   * @see ale.xtext.ale.ImpliesOperation
   * @generated
   */
  EClass getImpliesOperation();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.ImpliesOperation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see ale.xtext.ale.ImpliesOperation#getLeft()
   * @see #getImpliesOperation()
   * @generated
   */
  EReference getImpliesOperation_Left();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.ImpliesOperation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see ale.xtext.ale.ImpliesOperation#getRight()
   * @see #getImpliesOperation()
   * @generated
   */
  EReference getImpliesOperation_Right();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.BooleanOrOperation <em>Boolean Or Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Boolean Or Operation</em>'.
   * @see ale.xtext.ale.BooleanOrOperation
   * @generated
   */
  EClass getBooleanOrOperation();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.BooleanOrOperation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see ale.xtext.ale.BooleanOrOperation#getLeft()
   * @see #getBooleanOrOperation()
   * @generated
   */
  EReference getBooleanOrOperation_Left();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.BooleanOrOperation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see ale.xtext.ale.BooleanOrOperation#getRight()
   * @see #getBooleanOrOperation()
   * @generated
   */
  EReference getBooleanOrOperation_Right();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.BooleanAndOperation <em>Boolean And Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Boolean And Operation</em>'.
   * @see ale.xtext.ale.BooleanAndOperation
   * @generated
   */
  EClass getBooleanAndOperation();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.BooleanAndOperation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see ale.xtext.ale.BooleanAndOperation#getLeft()
   * @see #getBooleanAndOperation()
   * @generated
   */
  EReference getBooleanAndOperation_Left();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.BooleanAndOperation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see ale.xtext.ale.BooleanAndOperation#getRight()
   * @see #getBooleanAndOperation()
   * @generated
   */
  EReference getBooleanAndOperation_Right();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.BooleanXorOperation <em>Boolean Xor Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Boolean Xor Operation</em>'.
   * @see ale.xtext.ale.BooleanXorOperation
   * @generated
   */
  EClass getBooleanXorOperation();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.BooleanXorOperation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see ale.xtext.ale.BooleanXorOperation#getLeft()
   * @see #getBooleanXorOperation()
   * @generated
   */
  EReference getBooleanXorOperation_Left();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.BooleanXorOperation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see ale.xtext.ale.BooleanXorOperation#getRight()
   * @see #getBooleanXorOperation()
   * @generated
   */
  EReference getBooleanXorOperation_Right();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.CompareLEOperation <em>Compare LE Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Compare LE Operation</em>'.
   * @see ale.xtext.ale.CompareLEOperation
   * @generated
   */
  EClass getCompareLEOperation();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.CompareLEOperation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see ale.xtext.ale.CompareLEOperation#getLeft()
   * @see #getCompareLEOperation()
   * @generated
   */
  EReference getCompareLEOperation_Left();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.CompareLEOperation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see ale.xtext.ale.CompareLEOperation#getRight()
   * @see #getCompareLEOperation()
   * @generated
   */
  EReference getCompareLEOperation_Right();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.CompareGEOperation <em>Compare GE Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Compare GE Operation</em>'.
   * @see ale.xtext.ale.CompareGEOperation
   * @generated
   */
  EClass getCompareGEOperation();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.CompareGEOperation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see ale.xtext.ale.CompareGEOperation#getLeft()
   * @see #getCompareGEOperation()
   * @generated
   */
  EReference getCompareGEOperation_Left();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.CompareGEOperation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see ale.xtext.ale.CompareGEOperation#getRight()
   * @see #getCompareGEOperation()
   * @generated
   */
  EReference getCompareGEOperation_Right();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.CompareNEOperation <em>Compare NE Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Compare NE Operation</em>'.
   * @see ale.xtext.ale.CompareNEOperation
   * @generated
   */
  EClass getCompareNEOperation();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.CompareNEOperation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see ale.xtext.ale.CompareNEOperation#getLeft()
   * @see #getCompareNEOperation()
   * @generated
   */
  EReference getCompareNEOperation_Left();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.CompareNEOperation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see ale.xtext.ale.CompareNEOperation#getRight()
   * @see #getCompareNEOperation()
   * @generated
   */
  EReference getCompareNEOperation_Right();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.CompareLOperation <em>Compare LOperation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Compare LOperation</em>'.
   * @see ale.xtext.ale.CompareLOperation
   * @generated
   */
  EClass getCompareLOperation();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.CompareLOperation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see ale.xtext.ale.CompareLOperation#getLeft()
   * @see #getCompareLOperation()
   * @generated
   */
  EReference getCompareLOperation_Left();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.CompareLOperation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see ale.xtext.ale.CompareLOperation#getRight()
   * @see #getCompareLOperation()
   * @generated
   */
  EReference getCompareLOperation_Right();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.CompareGOperation <em>Compare GOperation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Compare GOperation</em>'.
   * @see ale.xtext.ale.CompareGOperation
   * @generated
   */
  EClass getCompareGOperation();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.CompareGOperation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see ale.xtext.ale.CompareGOperation#getLeft()
   * @see #getCompareGOperation()
   * @generated
   */
  EReference getCompareGOperation_Left();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.CompareGOperation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see ale.xtext.ale.CompareGOperation#getRight()
   * @see #getCompareGOperation()
   * @generated
   */
  EReference getCompareGOperation_Right();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.EqualityOperation <em>Equality Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Equality Operation</em>'.
   * @see ale.xtext.ale.EqualityOperation
   * @generated
   */
  EClass getEqualityOperation();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.EqualityOperation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see ale.xtext.ale.EqualityOperation#getLeft()
   * @see #getEqualityOperation()
   * @generated
   */
  EReference getEqualityOperation_Left();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.EqualityOperation#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see ale.xtext.ale.EqualityOperation#getOp()
   * @see #getEqualityOperation()
   * @generated
   */
  EAttribute getEqualityOperation_Op();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.EqualityOperation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see ale.xtext.ale.EqualityOperation#getRight()
   * @see #getEqualityOperation()
   * @generated
   */
  EReference getEqualityOperation_Right();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.MultOperation <em>Mult Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mult Operation</em>'.
   * @see ale.xtext.ale.MultOperation
   * @generated
   */
  EClass getMultOperation();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.MultOperation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see ale.xtext.ale.MultOperation#getLeft()
   * @see #getMultOperation()
   * @generated
   */
  EReference getMultOperation_Left();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.MultOperation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see ale.xtext.ale.MultOperation#getRight()
   * @see #getMultOperation()
   * @generated
   */
  EReference getMultOperation_Right();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.DivOperation <em>Div Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Div Operation</em>'.
   * @see ale.xtext.ale.DivOperation
   * @generated
   */
  EClass getDivOperation();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.DivOperation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see ale.xtext.ale.DivOperation#getLeft()
   * @see #getDivOperation()
   * @generated
   */
  EReference getDivOperation_Left();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.DivOperation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see ale.xtext.ale.DivOperation#getRight()
   * @see #getDivOperation()
   * @generated
   */
  EReference getDivOperation_Right();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.AddOperation <em>Add Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Add Operation</em>'.
   * @see ale.xtext.ale.AddOperation
   * @generated
   */
  EClass getAddOperation();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.AddOperation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see ale.xtext.ale.AddOperation#getLeft()
   * @see #getAddOperation()
   * @generated
   */
  EReference getAddOperation_Left();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.AddOperation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see ale.xtext.ale.AddOperation#getRight()
   * @see #getAddOperation()
   * @generated
   */
  EReference getAddOperation_Right();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.SubOperation <em>Sub Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sub Operation</em>'.
   * @see ale.xtext.ale.SubOperation
   * @generated
   */
  EClass getSubOperation();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.SubOperation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see ale.xtext.ale.SubOperation#getLeft()
   * @see #getSubOperation()
   * @generated
   */
  EReference getSubOperation_Left();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.SubOperation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see ale.xtext.ale.SubOperation#getRight()
   * @see #getSubOperation()
   * @generated
   */
  EReference getSubOperation_Right();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.ChainedCall <em>Chained Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Chained Call</em>'.
   * @see ale.xtext.ale.ChainedCall
   * @generated
   */
  EClass getChainedCall();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.ChainedCall#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see ale.xtext.ale.ChainedCall#getLeft()
   * @see #getChainedCall()
   * @generated
   */
  EReference getChainedCall_Left();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.ChainedCall#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see ale.xtext.ale.ChainedCall#getRight()
   * @see #getChainedCall()
   * @generated
   */
  EReference getChainedCall_Right();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.ChainedCallArrow <em>Chained Call Arrow</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Chained Call Arrow</em>'.
   * @see ale.xtext.ale.ChainedCallArrow
   * @generated
   */
  EClass getChainedCallArrow();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.ChainedCallArrow#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see ale.xtext.ale.ChainedCallArrow#getLeft()
   * @see #getChainedCallArrow()
   * @generated
   */
  EReference getChainedCallArrow_Left();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.ChainedCallArrow#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see ale.xtext.ale.ChainedCallArrow#getRight()
   * @see #getChainedCallArrow()
   * @generated
   */
  EReference getChainedCallArrow_Right();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.NotInfixOperation <em>Not Infix Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Not Infix Operation</em>'.
   * @see ale.xtext.ale.NotInfixOperation
   * @generated
   */
  EClass getNotInfixOperation();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.NotInfixOperation#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see ale.xtext.ale.NotInfixOperation#getExpression()
   * @see #getNotInfixOperation()
   * @generated
   */
  EReference getNotInfixOperation_Expression();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.NegInfixOperation <em>Neg Infix Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Neg Infix Operation</em>'.
   * @see ale.xtext.ale.NegInfixOperation
   * @generated
   */
  EClass getNegInfixOperation();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.NegInfixOperation#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see ale.xtext.ale.NegInfixOperation#getExpression()
   * @see #getNegInfixOperation()
   * @generated
   */
  EReference getNegInfixOperation_Expression();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.ConstructorOperation <em>Constructor Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constructor Operation</em>'.
   * @see ale.xtext.ale.ConstructorOperation
   * @generated
   */
  EClass getConstructorOperation();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.ConstructorOperation#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ale.xtext.ale.ConstructorOperation#getName()
   * @see #getConstructorOperation()
   * @generated
   */
  EAttribute getConstructorOperation_Name();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.OperationCallOperation <em>Operation Call Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operation Call Operation</em>'.
   * @see ale.xtext.ale.OperationCallOperation
   * @generated
   */
  EClass getOperationCallOperation();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.OperationCallOperation#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see ale.xtext.ale.OperationCallOperation#getName()
   * @see #getOperationCallOperation()
   * @generated
   */
  EAttribute getOperationCallOperation_Name();

  /**
   * Returns the meta object for the containment reference list '{@link ale.xtext.ale.OperationCallOperation#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameters</em>'.
   * @see ale.xtext.ale.OperationCallOperation#getParameters()
   * @see #getOperationCallOperation()
   * @generated
   */
  EReference getOperationCallOperation_Parameters();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.SelfRef <em>Self Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Self Ref</em>'.
   * @see ale.xtext.ale.SelfRef
   * @generated
   */
  EClass getSelfRef();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.SuperRef <em>Super Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Super Ref</em>'.
   * @see ale.xtext.ale.SuperRef
   * @generated
   */
  EClass getSuperRef();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.StringLiteral <em>String Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Literal</em>'.
   * @see ale.xtext.ale.StringLiteral
   * @generated
   */
  EClass getStringLiteral();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.StringLiteral#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see ale.xtext.ale.StringLiteral#getValue()
   * @see #getStringLiteral()
   * @generated
   */
  EAttribute getStringLiteral_Value();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.IntLiteral <em>Int Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Int Literal</em>'.
   * @see ale.xtext.ale.IntLiteral
   * @generated
   */
  EClass getIntLiteral();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.IntLiteral#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see ale.xtext.ale.IntLiteral#getValue()
   * @see #getIntLiteral()
   * @generated
   */
  EAttribute getIntLiteral_Value();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.RealLiteral <em>Real Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Real Literal</em>'.
   * @see ale.xtext.ale.RealLiteral
   * @generated
   */
  EClass getRealLiteral();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.RealLiteral#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see ale.xtext.ale.RealLiteral#getValue()
   * @see #getRealLiteral()
   * @generated
   */
  EAttribute getRealLiteral_Value();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.BooleanLiteral <em>Boolean Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Boolean Literal</em>'.
   * @see ale.xtext.ale.BooleanLiteral
   * @generated
   */
  EClass getBooleanLiteral();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.BooleanLiteral#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see ale.xtext.ale.BooleanLiteral#getValue()
   * @see #getBooleanLiteral()
   * @generated
   */
  EAttribute getBooleanLiteral_Value();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.NullLiteral <em>Null Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Null Literal</em>'.
   * @see ale.xtext.ale.NullLiteral
   * @generated
   */
  EClass getNullLiteral();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.IntRange <em>Int Range</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Int Range</em>'.
   * @see ale.xtext.ale.IntRange
   * @generated
   */
  EClass getIntRange();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.IntRange#getStart <em>Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Start</em>'.
   * @see ale.xtext.ale.IntRange#getStart()
   * @see #getIntRange()
   * @generated
   */
  EReference getIntRange_Start();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.IntRange#getStop <em>Stop</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Stop</em>'.
   * @see ale.xtext.ale.IntRange#getStop()
   * @see #getIntRange()
   * @generated
   */
  EReference getIntRange_Stop();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.SequenceDecl <em>Sequence Decl</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sequence Decl</em>'.
   * @see ale.xtext.ale.SequenceDecl
   * @generated
   */
  EClass getSequenceDecl();

  /**
   * Returns the meta object for the containment reference list '{@link ale.xtext.ale.SequenceDecl#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see ale.xtext.ale.SequenceDecl#getExpressions()
   * @see #getSequenceDecl()
   * @generated
   */
  EReference getSequenceDecl_Expressions();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.OrderedSetDecl <em>Ordered Set Decl</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ordered Set Decl</em>'.
   * @see ale.xtext.ale.OrderedSetDecl
   * @generated
   */
  EClass getOrderedSetDecl();

  /**
   * Returns the meta object for the containment reference list '{@link ale.xtext.ale.OrderedSetDecl#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see ale.xtext.ale.OrderedSetDecl#getExpressions()
   * @see #getOrderedSetDecl()
   * @generated
   */
  EReference getOrderedSetDecl_Expressions();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.VarRef <em>Var Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Ref</em>'.
   * @see ale.xtext.ale.VarRef
   * @generated
   */
  EClass getVarRef();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.VarRef#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see ale.xtext.ale.VarRef#getValue()
   * @see #getVarRef()
   * @generated
   */
  EAttribute getVarRef_Value();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.OutOfScopeType <em>Out Of Scope Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Out Of Scope Type</em>'.
   * @see ale.xtext.ale.OutOfScopeType
   * @generated
   */
  EClass getOutOfScopeType();

  /**
   * Returns the meta object for the attribute '{@link ale.xtext.ale.OutOfScopeType#getExternalClass <em>External Class</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>External Class</em>'.
   * @see ale.xtext.ale.OutOfScopeType#getExternalClass()
   * @see #getOutOfScopeType()
   * @generated
   */
  EAttribute getOutOfScopeType_ExternalClass();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.SequenceType <em>Sequence Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sequence Type</em>'.
   * @see ale.xtext.ale.SequenceType
   * @generated
   */
  EClass getSequenceType();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.SequenceType#getSubType <em>Sub Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sub Type</em>'.
   * @see ale.xtext.ale.SequenceType#getSubType()
   * @see #getSequenceType()
   * @generated
   */
  EReference getSequenceType_SubType();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.OrderedSetType <em>Ordered Set Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ordered Set Type</em>'.
   * @see ale.xtext.ale.OrderedSetType
   * @generated
   */
  EClass getOrderedSetType();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.OrderedSetType#getSubType <em>Sub Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sub Type</em>'.
   * @see ale.xtext.ale.OrderedSetType#getSubType()
   * @see #getOrderedSetType()
   * @generated
   */
  EReference getOrderedSetType_SubType();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.BooleanTypeT <em>Boolean Type T</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Boolean Type T</em>'.
   * @see ale.xtext.ale.BooleanTypeT
   * @generated
   */
  EClass getBooleanTypeT();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.RealTypeT <em>Real Type T</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Real Type T</em>'.
   * @see ale.xtext.ale.RealTypeT
   * @generated
   */
  EClass getRealTypeT();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.IntTypeT <em>Int Type T</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Int Type T</em>'.
   * @see ale.xtext.ale.IntTypeT
   * @generated
   */
  EClass getIntTypeT();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.StringTypeT <em>String Type T</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Type T</em>'.
   * @see ale.xtext.ale.StringTypeT
   * @generated
   */
  EClass getStringTypeT();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.NullTypeT <em>Null Type T</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Null Type T</em>'.
   * @see ale.xtext.ale.NullTypeT
   * @generated
   */
  EClass getNullTypeT();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.SequenceTypeT <em>Sequence Type T</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sequence Type T</em>'.
   * @see ale.xtext.ale.SequenceTypeT
   * @generated
   */
  EClass getSequenceTypeT();

  /**
   * Returns the meta object for the containment reference '{@link ale.xtext.ale.SequenceTypeT#getSubType <em>Sub Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sub Type</em>'.
   * @see ale.xtext.ale.SequenceTypeT#getSubType()
   * @see #getSequenceTypeT()
   * @generated
   */
  EReference getSequenceTypeT_SubType();

  /**
   * Returns the meta object for class '{@link ale.xtext.ale.ClassTypeT <em>Class Type T</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Class Type T</em>'.
   * @see ale.xtext.ale.ClassTypeT
   * @generated
   */
  EClass getClassTypeT();

  /**
   * Returns the meta object for the reference '{@link ale.xtext.ale.ClassTypeT#getClazz <em>Clazz</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Clazz</em>'.
   * @see ale.xtext.ale.ClassTypeT#getClazz()
   * @see #getClassTypeT()
   * @generated
   */
  EReference getClassTypeT_Clazz();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  AleFactory getAleFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.RootImpl <em>Root</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.RootImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getRoot()
     * @generated
     */
    EClass ROOT = eINSTANCE.getRoot();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ROOT__NAME = eINSTANCE.getRoot_Name();

    /**
     * The meta object literal for the '<em><b>Imports</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROOT__IMPORTS = eINSTANCE.getRoot_Imports();

    /**
     * The meta object literal for the '<em><b>Classes</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROOT__CLASSES = eINSTANCE.getRoot_Classes();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.ImportImpl <em>Import</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.ImportImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getImport()
     * @generated
     */
    EClass IMPORT = eINSTANCE.getImport();

    /**
     * The meta object literal for the '<em><b>Ref</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IMPORT__REF = eINSTANCE.getImport_Ref();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORT__NAME = eINSTANCE.getImport_Name();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.AleClassImpl <em>Class</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.AleClassImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getAleClass()
     * @generated
     */
    EClass ALE_CLASS = eINSTANCE.getAleClass();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALE_CLASS__NAME = eINSTANCE.getAleClass_Name();

    /**
     * The meta object literal for the '<em><b>Super Class</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALE_CLASS__SUPER_CLASS = eINSTANCE.getAleClass_SuperClass();

    /**
     * The meta object literal for the '<em><b>Fields</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALE_CLASS__FIELDS = eINSTANCE.getAleClass_Fields();

    /**
     * The meta object literal for the '<em><b>Methods</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALE_CLASS__METHODS = eINSTANCE.getAleClass_Methods();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.FieldImpl <em>Field</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.FieldImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getField()
     * @generated
     */
    EClass FIELD = eINSTANCE.getField();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FIELD__TYPE = eINSTANCE.getField_Type();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FIELD__NAME = eINSTANCE.getField_Name();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.MethodImpl <em>Method</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.MethodImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getMethod()
     * @generated
     */
    EClass METHOD = eINSTANCE.getMethod();

    /**
     * The meta object literal for the '<em><b>Tags</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute METHOD__TAGS = eINSTANCE.getMethod_Tags();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD__TYPE = eINSTANCE.getMethod_Type();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute METHOD__NAME = eINSTANCE.getMethod_Name();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD__PARAMS = eINSTANCE.getMethod_Params();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference METHOD__BLOCK = eINSTANCE.getMethod_Block();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.DefMethodImpl <em>Def Method</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.DefMethodImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getDefMethod()
     * @generated
     */
    EClass DEF_METHOD = eINSTANCE.getDefMethod();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.OverrideMethodImpl <em>Override Method</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.OverrideMethodImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getOverrideMethod()
     * @generated
     */
    EClass OVERRIDE_METHOD = eINSTANCE.getOverrideMethod();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.StatementImpl <em>Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.StatementImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getStatement()
     * @generated
     */
    EClass STATEMENT = eINSTANCE.getStatement();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.BlockImpl <em>Block</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.BlockImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getBlock()
     * @generated
     */
    EClass BLOCK = eINSTANCE.getBlock();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK__BODY = eINSTANCE.getBlock_Body();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.ExpressionImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.SymbolImpl <em>Symbol</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.SymbolImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getSymbol()
     * @generated
     */
    EClass SYMBOL = eINSTANCE.getSymbol();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.ParamCallImpl <em>Param Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.ParamCallImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getParamCall()
     * @generated
     */
    EClass PARAM_CALL = eINSTANCE.getParamCall();

    /**
     * The meta object literal for the '<em><b>Lambda</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARAM_CALL__LAMBDA = eINSTANCE.getParamCall_Lambda();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAM_CALL__EXPRESSION = eINSTANCE.getParamCall_Expression();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.ParamImpl <em>Param</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.ParamImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getParam()
     * @generated
     */
    EClass PARAM = eINSTANCE.getParam();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAM__TYPE = eINSTANCE.getParam_Type();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARAM__NAME = eINSTANCE.getParam_Name();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.TypeImpl <em>Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.TypeImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getType()
     * @generated
     */
    EClass TYPE = eINSTANCE.getType();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.LiteralTypeImpl <em>Literal Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.LiteralTypeImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getLiteralType()
     * @generated
     */
    EClass LITERAL_TYPE = eINSTANCE.getLiteralType();

    /**
     * The meta object literal for the '<em><b>Lit</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LITERAL_TYPE__LIT = eINSTANCE.getLiteralType_Lit();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.TypeSystemImpl <em>Type System</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.TypeSystemImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getTypeSystem()
     * @generated
     */
    EClass TYPE_SYSTEM = eINSTANCE.getTypeSystem();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.OpenClassImpl <em>Open Class</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.OpenClassImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getOpenClass()
     * @generated
     */
    EClass OPEN_CLASS = eINSTANCE.getOpenClass();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.NewClassImpl <em>New Class</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.NewClassImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getNewClass()
     * @generated
     */
    EClass NEW_CLASS = eINSTANCE.getNewClass();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.ReturnStatementImpl <em>Return Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.ReturnStatementImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getReturnStatement()
     * @generated
     */
    EClass RETURN_STATEMENT = eINSTANCE.getReturnStatement();

    /**
     * The meta object literal for the '<em><b>Returned</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RETURN_STATEMENT__RETURNED = eINSTANCE.getReturnStatement_Returned();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.LetStatementImpl <em>Let Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.LetStatementImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getLetStatement()
     * @generated
     */
    EClass LET_STATEMENT = eINSTANCE.getLetStatement();

    /**
     * The meta object literal for the '<em><b>Bindings</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LET_STATEMENT__BINDINGS = eINSTANCE.getLetStatement_Bindings();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LET_STATEMENT__BLOCK = eINSTANCE.getLetStatement_Block();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.IfStatementImpl <em>If Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.IfStatementImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getIfStatement()
     * @generated
     */
    EClass IF_STATEMENT = eINSTANCE.getIfStatement();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_STATEMENT__CONDITION = eINSTANCE.getIfStatement_Condition();

    /**
     * The meta object literal for the '<em><b>Then Branch</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_STATEMENT__THEN_BRANCH = eINSTANCE.getIfStatement_ThenBranch();

    /**
     * The meta object literal for the '<em><b>Else Branch</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_STATEMENT__ELSE_BRANCH = eINSTANCE.getIfStatement_ElseBranch();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.WhileStatementImpl <em>While Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.WhileStatementImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getWhileStatement()
     * @generated
     */
    EClass WHILE_STATEMENT = eINSTANCE.getWhileStatement();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILE_STATEMENT__CONDITION = eINSTANCE.getWhileStatement_Condition();

    /**
     * The meta object literal for the '<em><b>While Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILE_STATEMENT__WHILE_BLOCK = eINSTANCE.getWhileStatement_WhileBlock();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.ForLoopImpl <em>For Loop</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.ForLoopImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getForLoop()
     * @generated
     */
    EClass FOR_LOOP = eINSTANCE.getForLoop();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_LOOP__TYPE = eINSTANCE.getForLoop_Type();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FOR_LOOP__NAME = eINSTANCE.getForLoop_Name();

    /**
     * The meta object literal for the '<em><b>Collection</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_LOOP__COLLECTION = eINSTANCE.getForLoop_Collection();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_LOOP__BLOCK = eINSTANCE.getForLoop_Block();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.VarAssignImpl <em>Var Assign</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.VarAssignImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getVarAssign()
     * @generated
     */
    EClass VAR_ASSIGN = eINSTANCE.getVarAssign();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_ASSIGN__TYPE = eINSTANCE.getVarAssign_Type();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_ASSIGN__NAME = eINSTANCE.getVarAssign_Name();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_ASSIGN__VALUE = eINSTANCE.getVarAssign_Value();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.ImpliesOperationImpl <em>Implies Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.ImpliesOperationImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getImpliesOperation()
     * @generated
     */
    EClass IMPLIES_OPERATION = eINSTANCE.getImpliesOperation();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IMPLIES_OPERATION__LEFT = eINSTANCE.getImpliesOperation_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IMPLIES_OPERATION__RIGHT = eINSTANCE.getImpliesOperation_Right();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.BooleanOrOperationImpl <em>Boolean Or Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.BooleanOrOperationImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getBooleanOrOperation()
     * @generated
     */
    EClass BOOLEAN_OR_OPERATION = eINSTANCE.getBooleanOrOperation();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BOOLEAN_OR_OPERATION__LEFT = eINSTANCE.getBooleanOrOperation_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BOOLEAN_OR_OPERATION__RIGHT = eINSTANCE.getBooleanOrOperation_Right();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.BooleanAndOperationImpl <em>Boolean And Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.BooleanAndOperationImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getBooleanAndOperation()
     * @generated
     */
    EClass BOOLEAN_AND_OPERATION = eINSTANCE.getBooleanAndOperation();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BOOLEAN_AND_OPERATION__LEFT = eINSTANCE.getBooleanAndOperation_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BOOLEAN_AND_OPERATION__RIGHT = eINSTANCE.getBooleanAndOperation_Right();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.BooleanXorOperationImpl <em>Boolean Xor Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.BooleanXorOperationImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getBooleanXorOperation()
     * @generated
     */
    EClass BOOLEAN_XOR_OPERATION = eINSTANCE.getBooleanXorOperation();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BOOLEAN_XOR_OPERATION__LEFT = eINSTANCE.getBooleanXorOperation_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BOOLEAN_XOR_OPERATION__RIGHT = eINSTANCE.getBooleanXorOperation_Right();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.CompareLEOperationImpl <em>Compare LE Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.CompareLEOperationImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getCompareLEOperation()
     * @generated
     */
    EClass COMPARE_LE_OPERATION = eINSTANCE.getCompareLEOperation();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARE_LE_OPERATION__LEFT = eINSTANCE.getCompareLEOperation_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARE_LE_OPERATION__RIGHT = eINSTANCE.getCompareLEOperation_Right();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.CompareGEOperationImpl <em>Compare GE Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.CompareGEOperationImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getCompareGEOperation()
     * @generated
     */
    EClass COMPARE_GE_OPERATION = eINSTANCE.getCompareGEOperation();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARE_GE_OPERATION__LEFT = eINSTANCE.getCompareGEOperation_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARE_GE_OPERATION__RIGHT = eINSTANCE.getCompareGEOperation_Right();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.CompareNEOperationImpl <em>Compare NE Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.CompareNEOperationImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getCompareNEOperation()
     * @generated
     */
    EClass COMPARE_NE_OPERATION = eINSTANCE.getCompareNEOperation();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARE_NE_OPERATION__LEFT = eINSTANCE.getCompareNEOperation_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARE_NE_OPERATION__RIGHT = eINSTANCE.getCompareNEOperation_Right();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.CompareLOperationImpl <em>Compare LOperation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.CompareLOperationImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getCompareLOperation()
     * @generated
     */
    EClass COMPARE_LOPERATION = eINSTANCE.getCompareLOperation();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARE_LOPERATION__LEFT = eINSTANCE.getCompareLOperation_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARE_LOPERATION__RIGHT = eINSTANCE.getCompareLOperation_Right();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.CompareGOperationImpl <em>Compare GOperation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.CompareGOperationImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getCompareGOperation()
     * @generated
     */
    EClass COMPARE_GOPERATION = eINSTANCE.getCompareGOperation();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARE_GOPERATION__LEFT = eINSTANCE.getCompareGOperation_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARE_GOPERATION__RIGHT = eINSTANCE.getCompareGOperation_Right();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.EqualityOperationImpl <em>Equality Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.EqualityOperationImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getEqualityOperation()
     * @generated
     */
    EClass EQUALITY_OPERATION = eINSTANCE.getEqualityOperation();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUALITY_OPERATION__LEFT = eINSTANCE.getEqualityOperation_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EQUALITY_OPERATION__OP = eINSTANCE.getEqualityOperation_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUALITY_OPERATION__RIGHT = eINSTANCE.getEqualityOperation_Right();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.MultOperationImpl <em>Mult Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.MultOperationImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getMultOperation()
     * @generated
     */
    EClass MULT_OPERATION = eINSTANCE.getMultOperation();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULT_OPERATION__LEFT = eINSTANCE.getMultOperation_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULT_OPERATION__RIGHT = eINSTANCE.getMultOperation_Right();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.DivOperationImpl <em>Div Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.DivOperationImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getDivOperation()
     * @generated
     */
    EClass DIV_OPERATION = eINSTANCE.getDivOperation();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIV_OPERATION__LEFT = eINSTANCE.getDivOperation_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DIV_OPERATION__RIGHT = eINSTANCE.getDivOperation_Right();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.AddOperationImpl <em>Add Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.AddOperationImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getAddOperation()
     * @generated
     */
    EClass ADD_OPERATION = eINSTANCE.getAddOperation();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADD_OPERATION__LEFT = eINSTANCE.getAddOperation_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADD_OPERATION__RIGHT = eINSTANCE.getAddOperation_Right();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.SubOperationImpl <em>Sub Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.SubOperationImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getSubOperation()
     * @generated
     */
    EClass SUB_OPERATION = eINSTANCE.getSubOperation();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUB_OPERATION__LEFT = eINSTANCE.getSubOperation_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUB_OPERATION__RIGHT = eINSTANCE.getSubOperation_Right();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.ChainedCallImpl <em>Chained Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.ChainedCallImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getChainedCall()
     * @generated
     */
    EClass CHAINED_CALL = eINSTANCE.getChainedCall();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CHAINED_CALL__LEFT = eINSTANCE.getChainedCall_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CHAINED_CALL__RIGHT = eINSTANCE.getChainedCall_Right();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.ChainedCallArrowImpl <em>Chained Call Arrow</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.ChainedCallArrowImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getChainedCallArrow()
     * @generated
     */
    EClass CHAINED_CALL_ARROW = eINSTANCE.getChainedCallArrow();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CHAINED_CALL_ARROW__LEFT = eINSTANCE.getChainedCallArrow_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CHAINED_CALL_ARROW__RIGHT = eINSTANCE.getChainedCallArrow_Right();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.NotInfixOperationImpl <em>Not Infix Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.NotInfixOperationImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getNotInfixOperation()
     * @generated
     */
    EClass NOT_INFIX_OPERATION = eINSTANCE.getNotInfixOperation();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NOT_INFIX_OPERATION__EXPRESSION = eINSTANCE.getNotInfixOperation_Expression();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.NegInfixOperationImpl <em>Neg Infix Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.NegInfixOperationImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getNegInfixOperation()
     * @generated
     */
    EClass NEG_INFIX_OPERATION = eINSTANCE.getNegInfixOperation();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NEG_INFIX_OPERATION__EXPRESSION = eINSTANCE.getNegInfixOperation_Expression();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.ConstructorOperationImpl <em>Constructor Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.ConstructorOperationImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getConstructorOperation()
     * @generated
     */
    EClass CONSTRUCTOR_OPERATION = eINSTANCE.getConstructorOperation();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTRUCTOR_OPERATION__NAME = eINSTANCE.getConstructorOperation_Name();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.OperationCallOperationImpl <em>Operation Call Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.OperationCallOperationImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getOperationCallOperation()
     * @generated
     */
    EClass OPERATION_CALL_OPERATION = eINSTANCE.getOperationCallOperation();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATION_CALL_OPERATION__NAME = eINSTANCE.getOperationCallOperation_Name();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATION_CALL_OPERATION__PARAMETERS = eINSTANCE.getOperationCallOperation_Parameters();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.SelfRefImpl <em>Self Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.SelfRefImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getSelfRef()
     * @generated
     */
    EClass SELF_REF = eINSTANCE.getSelfRef();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.SuperRefImpl <em>Super Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.SuperRefImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getSuperRef()
     * @generated
     */
    EClass SUPER_REF = eINSTANCE.getSuperRef();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.StringLiteralImpl <em>String Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.StringLiteralImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getStringLiteral()
     * @generated
     */
    EClass STRING_LITERAL = eINSTANCE.getStringLiteral();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRING_LITERAL__VALUE = eINSTANCE.getStringLiteral_Value();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.IntLiteralImpl <em>Int Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.IntLiteralImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getIntLiteral()
     * @generated
     */
    EClass INT_LITERAL = eINSTANCE.getIntLiteral();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INT_LITERAL__VALUE = eINSTANCE.getIntLiteral_Value();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.RealLiteralImpl <em>Real Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.RealLiteralImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getRealLiteral()
     * @generated
     */
    EClass REAL_LITERAL = eINSTANCE.getRealLiteral();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute REAL_LITERAL__VALUE = eINSTANCE.getRealLiteral_Value();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.BooleanLiteralImpl <em>Boolean Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.BooleanLiteralImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getBooleanLiteral()
     * @generated
     */
    EClass BOOLEAN_LITERAL = eINSTANCE.getBooleanLiteral();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOLEAN_LITERAL__VALUE = eINSTANCE.getBooleanLiteral_Value();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.NullLiteralImpl <em>Null Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.NullLiteralImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getNullLiteral()
     * @generated
     */
    EClass NULL_LITERAL = eINSTANCE.getNullLiteral();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.IntRangeImpl <em>Int Range</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.IntRangeImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getIntRange()
     * @generated
     */
    EClass INT_RANGE = eINSTANCE.getIntRange();

    /**
     * The meta object literal for the '<em><b>Start</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INT_RANGE__START = eINSTANCE.getIntRange_Start();

    /**
     * The meta object literal for the '<em><b>Stop</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INT_RANGE__STOP = eINSTANCE.getIntRange_Stop();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.SequenceDeclImpl <em>Sequence Decl</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.SequenceDeclImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getSequenceDecl()
     * @generated
     */
    EClass SEQUENCE_DECL = eINSTANCE.getSequenceDecl();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SEQUENCE_DECL__EXPRESSIONS = eINSTANCE.getSequenceDecl_Expressions();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.OrderedSetDeclImpl <em>Ordered Set Decl</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.OrderedSetDeclImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getOrderedSetDecl()
     * @generated
     */
    EClass ORDERED_SET_DECL = eINSTANCE.getOrderedSetDecl();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ORDERED_SET_DECL__EXPRESSIONS = eINSTANCE.getOrderedSetDecl_Expressions();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.VarRefImpl <em>Var Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.VarRefImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getVarRef()
     * @generated
     */
    EClass VAR_REF = eINSTANCE.getVarRef();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_REF__VALUE = eINSTANCE.getVarRef_Value();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.OutOfScopeTypeImpl <em>Out Of Scope Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.OutOfScopeTypeImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getOutOfScopeType()
     * @generated
     */
    EClass OUT_OF_SCOPE_TYPE = eINSTANCE.getOutOfScopeType();

    /**
     * The meta object literal for the '<em><b>External Class</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OUT_OF_SCOPE_TYPE__EXTERNAL_CLASS = eINSTANCE.getOutOfScopeType_ExternalClass();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.SequenceTypeImpl <em>Sequence Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.SequenceTypeImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getSequenceType()
     * @generated
     */
    EClass SEQUENCE_TYPE = eINSTANCE.getSequenceType();

    /**
     * The meta object literal for the '<em><b>Sub Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SEQUENCE_TYPE__SUB_TYPE = eINSTANCE.getSequenceType_SubType();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.OrderedSetTypeImpl <em>Ordered Set Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.OrderedSetTypeImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getOrderedSetType()
     * @generated
     */
    EClass ORDERED_SET_TYPE = eINSTANCE.getOrderedSetType();

    /**
     * The meta object literal for the '<em><b>Sub Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ORDERED_SET_TYPE__SUB_TYPE = eINSTANCE.getOrderedSetType_SubType();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.BooleanTypeTImpl <em>Boolean Type T</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.BooleanTypeTImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getBooleanTypeT()
     * @generated
     */
    EClass BOOLEAN_TYPE_T = eINSTANCE.getBooleanTypeT();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.RealTypeTImpl <em>Real Type T</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.RealTypeTImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getRealTypeT()
     * @generated
     */
    EClass REAL_TYPE_T = eINSTANCE.getRealTypeT();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.IntTypeTImpl <em>Int Type T</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.IntTypeTImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getIntTypeT()
     * @generated
     */
    EClass INT_TYPE_T = eINSTANCE.getIntTypeT();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.StringTypeTImpl <em>String Type T</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.StringTypeTImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getStringTypeT()
     * @generated
     */
    EClass STRING_TYPE_T = eINSTANCE.getStringTypeT();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.NullTypeTImpl <em>Null Type T</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.NullTypeTImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getNullTypeT()
     * @generated
     */
    EClass NULL_TYPE_T = eINSTANCE.getNullTypeT();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.SequenceTypeTImpl <em>Sequence Type T</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.SequenceTypeTImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getSequenceTypeT()
     * @generated
     */
    EClass SEQUENCE_TYPE_T = eINSTANCE.getSequenceTypeT();

    /**
     * The meta object literal for the '<em><b>Sub Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SEQUENCE_TYPE_T__SUB_TYPE = eINSTANCE.getSequenceTypeT_SubType();

    /**
     * The meta object literal for the '{@link ale.xtext.ale.impl.ClassTypeTImpl <em>Class Type T</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ale.xtext.ale.impl.ClassTypeTImpl
     * @see ale.xtext.ale.impl.AlePackageImpl#getClassTypeT()
     * @generated
     */
    EClass CLASS_TYPE_T = eINSTANCE.getClassTypeT();

    /**
     * The meta object literal for the '<em><b>Clazz</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLASS_TYPE_T__CLAZZ = eINSTANCE.getClassTypeT_Clazz();

  }

} //AlePackage
