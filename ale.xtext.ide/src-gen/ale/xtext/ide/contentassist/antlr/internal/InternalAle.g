/*
 * generated by Xtext 2.10.0
 */
grammar InternalAle;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package ale.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package ale.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import ale.xtext.services.AleGrammarAccess;

}
@parser::members {
	private AleGrammarAccess grammarAccess;

	public void setGrammarAccess(AleGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRoot
entryRuleRoot
:
{ before(grammarAccess.getRootRule()); }
	 ruleRoot
{ after(grammarAccess.getRootRule()); } 
	 EOF 
;

// Rule Root
ruleRoot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRootAccess().getGroup()); }
		(rule__Root__Group__0)
		{ after(grammarAccess.getRootAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAleClass
entryRuleAleClass
:
{ before(grammarAccess.getAleClassRule()); }
	 ruleAleClass
{ after(grammarAccess.getAleClassRule()); } 
	 EOF 
;

// Rule AleClass
ruleAleClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAleClassAccess().getAlternatives()); }
		(rule__AleClass__Alternatives)
		{ after(grammarAccess.getAleClassAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTag
entryRuleTag
:
{ before(grammarAccess.getTagRule()); }
	 ruleTag
{ after(grammarAccess.getTagRule()); } 
	 EOF 
;

// Rule Tag
ruleTag 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTagAccess().getGroup()); }
		(rule__Tag__Group__0)
		{ after(grammarAccess.getTagAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpenClass
entryRuleOpenClass
:
{ before(grammarAccess.getOpenClassRule()); }
	 ruleOpenClass
{ after(grammarAccess.getOpenClassRule()); } 
	 EOF 
;

// Rule OpenClass
ruleOpenClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpenClassAccess().getGroup()); }
		(rule__OpenClass__Group__0)
		{ after(grammarAccess.getOpenClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNewClass
entryRuleNewClass
:
{ before(grammarAccess.getNewClassRule()); }
	 ruleNewClass
{ after(grammarAccess.getNewClassRule()); } 
	 EOF 
;

// Rule NewClass
ruleNewClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNewClassAccess().getGroup()); }
		(rule__NewClass__Group__0)
		{ after(grammarAccess.getNewClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getAlternatives()); }
		(rule__Field__Alternatives)
		{ after(grammarAccess.getFieldAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethod
entryRuleMethod
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodAccess().getAlternatives()); }
		(rule__Method__Alternatives)
		{ after(grammarAccess.getMethodAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefMethod
entryRuleDefMethod
:
{ before(grammarAccess.getDefMethodRule()); }
	 ruleDefMethod
{ after(grammarAccess.getDefMethodRule()); } 
	 EOF 
;

// Rule DefMethod
ruleDefMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefMethodAccess().getGroup()); }
		(rule__DefMethod__Group__0)
		{ after(grammarAccess.getDefMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOverrideMethod
entryRuleOverrideMethod
:
{ before(grammarAccess.getOverrideMethodRule()); }
	 ruleOverrideMethod
{ after(grammarAccess.getOverrideMethodRule()); } 
	 EOF 
;

// Rule OverrideMethod
ruleOverrideMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOverrideMethodAccess().getGroup()); }
		(rule__OverrideMethod__Group__0)
		{ after(grammarAccess.getOverrideMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDebugStatement
entryRuleDebugStatement
:
{ before(grammarAccess.getDebugStatementRule()); }
	 ruleDebugStatement
{ after(grammarAccess.getDebugStatementRule()); } 
	 EOF 
;

// Rule DebugStatement
ruleDebugStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDebugStatementAccess().getGroup()); }
		(rule__DebugStatement__Group__0)
		{ after(grammarAccess.getDebugStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnStatement
entryRuleReturnStatement
:
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
		(rule__ReturnStatement__Group__0)
		{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLetStatement
entryRuleLetStatement
:
{ before(grammarAccess.getLetStatementRule()); }
	 ruleLetStatement
{ after(grammarAccess.getLetStatementRule()); } 
	 EOF 
;

// Rule LetStatement
ruleLetStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLetStatementAccess().getGroup()); }
		(rule__LetStatement__Group__0)
		{ after(grammarAccess.getLetStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStatement
entryRuleIfStatement
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStatementAccess().getGroup()); }
		(rule__IfStatement__Group__0)
		{ after(grammarAccess.getIfStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileStatement
entryRuleWhileStatement
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
		(rule__WhileStatement__Group__0)
		{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForLoop
entryRuleForLoop
:
{ before(grammarAccess.getForLoopRule()); }
	 ruleForLoop
{ after(grammarAccess.getForLoopRule()); } 
	 EOF 
;

// Rule ForLoop
ruleForLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForLoopAccess().getGroup()); }
		(rule__ForLoop__Group__0)
		{ after(grammarAccess.getForLoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlock
entryRuleBlock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getGroup()); }
		(rule__Block__Group__0)
		{ after(grammarAccess.getBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarAssign
entryRuleVarAssign
:
{ before(grammarAccess.getVarAssignRule()); }
	 ruleVarAssign
{ after(grammarAccess.getVarAssignRule()); } 
	 EOF 
;

// Rule VarAssign
ruleVarAssign 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarAssignAccess().getAlternatives()); }
		(rule__VarAssign__Alternatives)
		{ after(grammarAccess.getVarAssignAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getImpliesOperationParserRuleCall()); }
		ruleImpliesOperation
		{ after(grammarAccess.getExpressionAccess().getImpliesOperationParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImpliesOperation
entryRuleImpliesOperation
:
{ before(grammarAccess.getImpliesOperationRule()); }
	 ruleImpliesOperation
{ after(grammarAccess.getImpliesOperationRule()); } 
	 EOF 
;

// Rule ImpliesOperation
ruleImpliesOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImpliesOperationAccess().getGroup()); }
		(rule__ImpliesOperation__Group__0)
		{ after(grammarAccess.getImpliesOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanOperation
entryRuleBooleanOperation
:
{ before(grammarAccess.getBooleanOperationRule()); }
	 ruleBooleanOperation
{ after(grammarAccess.getBooleanOperationRule()); } 
	 EOF 
;

// Rule BooleanOperation
ruleBooleanOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanOperationAccess().getGroup()); }
		(rule__BooleanOperation__Group__0)
		{ after(grammarAccess.getBooleanOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompareOperation
entryRuleCompareOperation
:
{ before(grammarAccess.getCompareOperationRule()); }
	 ruleCompareOperation
{ after(grammarAccess.getCompareOperationRule()); } 
	 EOF 
;

// Rule CompareOperation
ruleCompareOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompareOperationAccess().getGroup()); }
		(rule__CompareOperation__Group__0)
		{ after(grammarAccess.getCompareOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityOperation
entryRuleEqualityOperation
:
{ before(grammarAccess.getEqualityOperationRule()); }
	 ruleEqualityOperation
{ after(grammarAccess.getEqualityOperationRule()); } 
	 EOF 
;

// Rule EqualityOperation
ruleEqualityOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityOperationAccess().getGroup()); }
		(rule__EqualityOperation__Group__0)
		{ after(grammarAccess.getEqualityOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultOperation
entryRuleMultOperation
:
{ before(grammarAccess.getMultOperationRule()); }
	 ruleMultOperation
{ after(grammarAccess.getMultOperationRule()); } 
	 EOF 
;

// Rule MultOperation
ruleMultOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultOperationAccess().getGroup()); }
		(rule__MultOperation__Group__0)
		{ after(grammarAccess.getMultOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddOperation
entryRuleAddOperation
:
{ before(grammarAccess.getAddOperationRule()); }
	 ruleAddOperation
{ after(grammarAccess.getAddOperationRule()); } 
	 EOF 
;

// Rule AddOperation
ruleAddOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddOperationAccess().getGroup()); }
		(rule__AddOperation__Group__0)
		{ after(grammarAccess.getAddOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChaindedCall
entryRuleChaindedCall
:
{ before(grammarAccess.getChaindedCallRule()); }
	 ruleChaindedCall
{ after(grammarAccess.getChaindedCallRule()); } 
	 EOF 
;

// Rule ChaindedCall
ruleChaindedCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChaindedCallAccess().getGroup()); }
		(rule__ChaindedCall__Group__0)
		{ after(grammarAccess.getChaindedCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInfixOperation
entryRuleInfixOperation
:
{ before(grammarAccess.getInfixOperationRule()); }
	 ruleInfixOperation
{ after(grammarAccess.getInfixOperationRule()); } 
	 EOF 
;

// Rule InfixOperation
ruleInfixOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInfixOperationAccess().getAlternatives()); }
		(rule__InfixOperation__Alternatives)
		{ after(grammarAccess.getInfixOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParamCall
entryRuleParamCall
:
{ before(grammarAccess.getParamCallRule()); }
	 ruleParamCall
{ after(grammarAccess.getParamCallRule()); } 
	 EOF 
;

// Rule ParamCall
ruleParamCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParamCallAccess().getGroup()); }
		(rule__ParamCall__Group__0)
		{ after(grammarAccess.getParamCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomicLiteral
entryRuleAtomicLiteral
:
{ before(grammarAccess.getAtomicLiteralRule()); }
	 ruleAtomicLiteral
{ after(grammarAccess.getAtomicLiteralRule()); } 
	 EOF 
;

// Rule AtomicLiteral
ruleAtomicLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getAlternatives()); }
		(rule__AtomicLiteral__Alternatives)
		{ after(grammarAccess.getAtomicLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParam
entryRuleParam
:
{ before(grammarAccess.getParamRule()); }
	 ruleParam
{ after(grammarAccess.getParamRule()); } 
	 EOF 
;

// Rule Param
ruleParam 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParamAccess().getGroup()); }
		(rule__Param__Group__0)
		{ after(grammarAccess.getParamAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralType
entryRuleLiteralType
:
{ before(grammarAccess.getLiteralTypeRule()); }
	 ruleLiteralType
{ after(grammarAccess.getLiteralTypeRule()); } 
	 EOF 
;

// Rule LiteralType
ruleLiteralType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getLitAssignment()); }
		(rule__LiteralType__LitAssignment)
		{ after(grammarAccess.getLiteralTypeAccess().getLitAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualified
entryRuleQualified
:
{ before(grammarAccess.getQualifiedRule()); }
	 ruleQualified
{ after(grammarAccess.getQualifiedRule()); } 
	 EOF 
;

// Rule Qualified
ruleQualified 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedAccess().getGroup()); }
		(rule__Qualified__Group__0)
		{ after(grammarAccess.getQualifiedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSystem
entryRuleTypeSystem
:
{ before(grammarAccess.getTypeSystemRule()); }
	 ruleTypeSystem
{ after(grammarAccess.getTypeSystemRule()); } 
	 EOF 
;

// Rule TypeSystem
ruleTypeSystem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSystemAccess().getAlternatives()); }
		(rule__TypeSystem__Alternatives)
		{ after(grammarAccess.getTypeSystemAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AleClass__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAleClassAccess().getOpenClassParserRuleCall_0()); }
		ruleOpenClass
		{ after(grammarAccess.getAleClassAccess().getOpenClassParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAleClassAccess().getNewClassParserRuleCall_1()); }
		ruleNewClass
		{ after(grammarAccess.getAleClassAccess().getNewClassParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getGroup_0()); }
		(rule__Field__Group_0__0)
		{ after(grammarAccess.getFieldAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldAccess().getGroup_1()); }
		(rule__Field__Group_1__0)
		{ after(grammarAccess.getFieldAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getFieldAccess().getGroup_2()); }
		(rule__Field__Group_2__0)
		{ after(grammarAccess.getFieldAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getDefMethodParserRuleCall_0()); }
		ruleDefMethod
		{ after(grammarAccess.getMethodAccess().getDefMethodParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodAccess().getOverrideMethodParserRuleCall_1()); }
		ruleOverrideMethod
		{ after(grammarAccess.getMethodAccess().getOverrideMethodParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefMethodAccess().getTypeAssignment_2_0()); }
		(rule__DefMethod__TypeAssignment_2_0)
		{ after(grammarAccess.getDefMethodAccess().getTypeAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefMethodAccess().getVoidKeyword_2_1()); }
		'void'
		{ after(grammarAccess.getDefMethodAccess().getVoidKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGroup_0()); }
		(rule__Statement__Group_0__0)
		{ after(grammarAccess.getStatementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getForLoopParserRuleCall_1()); }
		ruleForLoop
		{ after(grammarAccess.getStatementAccess().getForLoopParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_2()); }
		ruleIfStatement
		{ after(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_3()); }
		ruleWhileStatement
		{ after(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_4()); }
		(rule__Statement__Group_4__0)
		{ after(grammarAccess.getStatementAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_5()); }
		(rule__Statement__Group_5__0)
		{ after(grammarAccess.getStatementAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_6()); }
		(rule__Statement__Group_6__0)
		{ after(grammarAccess.getStatementAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_7()); }
		(rule__Statement__Group_7__0)
		{ after(grammarAccess.getStatementAccess().getGroup_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__BlockAlternatives_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetStatementAccess().getBlockExpressionParserRuleCall_5_0_0()); }
		ruleExpression
		{ after(grammarAccess.getLetStatementAccess().getBlockExpressionParserRuleCall_5_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLetStatementAccess().getBlockLetStatementParserRuleCall_5_0_1()); }
		ruleLetStatement
		{ after(grammarAccess.getLetStatementAccess().getBlockLetStatementParserRuleCall_5_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAssignAccess().getGroup_0()); }
		(rule__VarAssign__Group_0__0)
		{ after(grammarAccess.getVarAssignAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarAssignAccess().getGroup_1()); }
		(rule__VarAssign__Group_1__0)
		{ after(grammarAccess.getVarAssignAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Alternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanOperationAccess().getGroup_1_0_0_0()); }
		(rule__BooleanOperation__Group_1_0_0_0__0)
		{ after(grammarAccess.getBooleanOperationAccess().getGroup_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanOperationAccess().getGroup_1_0_0_1()); }
		(rule__BooleanOperation__Group_1_0_0_1__0)
		{ after(grammarAccess.getBooleanOperationAccess().getGroup_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanOperationAccess().getGroup_1_0_0_2()); }
		(rule__BooleanOperation__Group_1_0_0_2__0)
		{ after(grammarAccess.getBooleanOperationAccess().getGroup_1_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Alternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareOperationAccess().getGroup_1_0_0_0()); }
		(rule__CompareOperation__Group_1_0_0_0__0)
		{ after(grammarAccess.getCompareOperationAccess().getGroup_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOperationAccess().getGroup_1_0_0_1()); }
		(rule__CompareOperation__Group_1_0_0_1__0)
		{ after(grammarAccess.getCompareOperationAccess().getGroup_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOperationAccess().getGroup_1_0_0_2()); }
		(rule__CompareOperation__Group_1_0_0_2__0)
		{ after(grammarAccess.getCompareOperationAccess().getGroup_1_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOperationAccess().getGroup_1_0_0_3()); }
		(rule__CompareOperation__Group_1_0_0_3__0)
		{ after(grammarAccess.getCompareOperationAccess().getGroup_1_0_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOperationAccess().getGroup_1_0_0_4()); }
		(rule__CompareOperation__Group_1_0_0_4__0)
		{ after(grammarAccess.getCompareOperationAccess().getGroup_1_0_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOperationAccess().getGroup_1_0_0_5()); }
		(rule__CompareOperation__Group_1_0_0_5__0)
		{ after(grammarAccess.getCompareOperationAccess().getGroup_1_0_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getCompareOperationAccess().getGroup_1_0_0_6()); }
		(rule__CompareOperation__Group_1_0_0_6__0)
		{ after(grammarAccess.getCompareOperationAccess().getGroup_1_0_0_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Alternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultOperationAccess().getGroup_1_0_0_0()); }
		(rule__MultOperation__Group_1_0_0_0__0)
		{ after(grammarAccess.getMultOperationAccess().getGroup_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultOperationAccess().getGroup_1_0_0_1()); }
		(rule__MultOperation__Group_1_0_0_1__0)
		{ after(grammarAccess.getMultOperationAccess().getGroup_1_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOperation__Alternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddOperationAccess().getGroup_1_0_0_0()); }
		(rule__AddOperation__Group_1_0_0_0__0)
		{ after(grammarAccess.getAddOperationAccess().getGroup_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddOperationAccess().getGroup_1_0_0_1()); }
		(rule__AddOperation__Group_1_0_0_1__0)
		{ after(grammarAccess.getAddOperationAccess().getGroup_1_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaindedCall__Alternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChaindedCallAccess().getGroup_1_0_0_0()); }
		(rule__ChaindedCall__Group_1_0_0_0__0)
		{ after(grammarAccess.getChaindedCallAccess().getGroup_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getChaindedCallAccess().getGroup_1_0_0_1()); }
		(rule__ChaindedCall__Group_1_0_0_1__0)
		{ after(grammarAccess.getChaindedCallAccess().getGroup_1_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixOperationAccess().getGroup_0()); }
		(rule__InfixOperation__Group_0__0)
		{ after(grammarAccess.getInfixOperationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperationAccess().getGroup_1()); }
		(rule__InfixOperation__Group_1__0)
		{ after(grammarAccess.getInfixOperationAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperationAccess().getGroup_2()); }
		(rule__InfixOperation__Group_2__0)
		{ after(grammarAccess.getInfixOperationAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperationAccess().getGroup_3()); }
		(rule__InfixOperation__Group_3__0)
		{ after(grammarAccess.getInfixOperationAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperationAccess().getGroup_4()); }
		(rule__InfixOperation__Group_4__0)
		{ after(grammarAccess.getInfixOperationAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperationAccess().getAtomicLiteralParserRuleCall_5()); }
		ruleAtomicLiteral
		{ after(grammarAccess.getInfixOperationAccess().getAtomicLiteralParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getGroup_0()); }
		(rule__AtomicLiteral__Group_0__0)
		{ after(grammarAccess.getAtomicLiteralAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getGroup_1()); }
		(rule__AtomicLiteral__Group_1__0)
		{ after(grammarAccess.getAtomicLiteralAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getGroup_2()); }
		(rule__AtomicLiteral__Group_2__0)
		{ after(grammarAccess.getAtomicLiteralAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getGroup_3()); }
		(rule__AtomicLiteral__Group_3__0)
		{ after(grammarAccess.getAtomicLiteralAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getGroup_4()); }
		(rule__AtomicLiteral__Group_4__0)
		{ after(grammarAccess.getAtomicLiteralAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getGroup_5()); }
		(rule__AtomicLiteral__Group_5__0)
		{ after(grammarAccess.getAtomicLiteralAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getGroup_6()); }
		(rule__AtomicLiteral__Group_6__0)
		{ after(grammarAccess.getAtomicLiteralAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getGroup_7()); }
		(rule__AtomicLiteral__Group_7__0)
		{ after(grammarAccess.getAtomicLiteralAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getGroup_8()); }
		(rule__AtomicLiteral__Group_8__0)
		{ after(grammarAccess.getAtomicLiteralAccess().getGroup_8()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getGroup_9()); }
		(rule__AtomicLiteral__Group_9__0)
		{ after(grammarAccess.getAtomicLiteralAccess().getGroup_9()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getGroup_10()); }
		(rule__AtomicLiteral__Group_10__0)
		{ after(grammarAccess.getAtomicLiteralAccess().getGroup_10()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getGroup_11()); }
		(rule__AtomicLiteral__Group_11__0)
		{ after(grammarAccess.getAtomicLiteralAccess().getGroup_11()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getGroup_12()); }
		(rule__AtomicLiteral__Group_12__0)
		{ after(grammarAccess.getAtomicLiteralAccess().getGroup_12()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getLiteralTypeParserRuleCall_0()); }
		ruleLiteralType
		{ after(grammarAccess.getTypeAccess().getLiteralTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_1()); }
		(rule__Type__Group_1__0)
		{ after(grammarAccess.getTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_2()); }
		(rule__Type__Group_2__0)
		{ after(grammarAccess.getTypeAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_3()); }
		(rule__Type__Group_3__0)
		{ after(grammarAccess.getTypeAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__LitAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getLitBooleanKeyword_0_0()); }
		'Boolean'
		{ after(grammarAccess.getLiteralTypeAccess().getLitBooleanKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getLitFloatKeyword_0_1()); }
		'Float'
		{ after(grammarAccess.getLiteralTypeAccess().getLitFloatKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getLitIntegerKeyword_0_2()); }
		'Integer'
		{ after(grammarAccess.getLiteralTypeAccess().getLitIntegerKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralTypeAccess().getLitStringKeyword_0_3()); }
		'String'
		{ after(grammarAccess.getLiteralTypeAccess().getLitStringKeyword_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSystemAccess().getGroup_0()); }
		(rule__TypeSystem__Group_0__0)
		{ after(grammarAccess.getTypeSystemAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSystemAccess().getGroup_1()); }
		(rule__TypeSystem__Group_1__0)
		{ after(grammarAccess.getTypeSystemAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSystemAccess().getGroup_2()); }
		(rule__TypeSystem__Group_2__0)
		{ after(grammarAccess.getTypeSystemAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSystemAccess().getGroup_3()); }
		(rule__TypeSystem__Group_3__0)
		{ after(grammarAccess.getTypeSystemAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSystemAccess().getGroup_4()); }
		(rule__TypeSystem__Group_4__0)
		{ after(grammarAccess.getTypeSystemAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSystemAccess().getGroup_5()); }
		(rule__TypeSystem__Group_5__0)
		{ after(grammarAccess.getTypeSystemAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getTypeSystemAccess().getGroup_6()); }
		(rule__TypeSystem__Group_6__0)
		{ after(grammarAccess.getTypeSystemAccess().getGroup_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group__0__Impl
	rule__Root__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getBehaviorKeyword_0()); }
	'behavior'
	{ after(grammarAccess.getRootAccess().getBehaviorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group__1__Impl
	rule__Root__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getNameAssignment_1()); }
	(rule__Root__NameAssignment_1)
	{ after(grammarAccess.getRootAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group__2__Impl
	rule__Root__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getGroup_2()); }
	(rule__Root__Group_2__0)?
	{ after(grammarAccess.getRootAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group__3__Impl
	rule__Root__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getRootAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group__4__Impl
	rule__Root__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getImportsAssignment_4()); }
	(rule__Root__ImportsAssignment_4)*
	{ after(grammarAccess.getRootAccess().getImportsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getClassesAssignment_5()); }
	(rule__Root__ClassesAssignment_5)*
	{ after(grammarAccess.getRootAccess().getClassesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Root__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_2__0__Impl
	rule__Root__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getExtendsKeyword_2_0()); }
	'extends'
	{ after(grammarAccess.getRootAccess().getExtendsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_2__1__Impl
	rule__Root__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getSuperAleAssignment_2_1()); }
	(rule__Root__SuperAleAssignment_2_1)
	{ after(grammarAccess.getRootAccess().getSuperAleAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getGroup_2_2()); }
	(rule__Root__Group_2_2__0)*
	{ after(grammarAccess.getRootAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Root__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_2_2__0__Impl
	rule__Root__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getRootAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getSuperAleAssignment_2_2_1()); }
	(rule__Root__SuperAleAssignment_2_2_1)
	{ after(grammarAccess.getRootAccess().getSuperAleAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getRefAssignment_1()); }
	(rule__Import__RefAssignment_1)
	{ after(grammarAccess.getImportAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__2__Impl
	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getAsKeyword_2()); }
	'as'
	{ after(grammarAccess.getImportAccess().getAsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__3__Impl
	rule__Import__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getNameAssignment_3()); }
	(rule__Import__NameAssignment_3)
	{ after(grammarAccess.getImportAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getImportAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tag__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__0__Impl
	rule__Tag__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getCommercialAtKeyword_0()); }
	'@'
	{ after(grammarAccess.getTagAccess().getCommercialAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
	{ after(grammarAccess.getTagAccess().getIDTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpenClass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenClass__Group__0__Impl
	rule__OpenClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenClassAccess().getOpenClassAction_0()); }
	()
	{ after(grammarAccess.getOpenClassAccess().getOpenClassAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenClass__Group__1__Impl
	rule__OpenClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenClassAccess().getOpenKeyword_1()); }
	'open'
	{ after(grammarAccess.getOpenClassAccess().getOpenKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenClass__Group__2__Impl
	rule__OpenClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenClassAccess().getClassKeyword_2()); }
	'class'
	{ after(grammarAccess.getOpenClassAccess().getClassKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenClass__Group__3__Impl
	rule__OpenClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenClassAccess().getNameAssignment_3()); }
	(rule__OpenClass__NameAssignment_3)
	{ after(grammarAccess.getOpenClassAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenClass__Group__4__Impl
	rule__OpenClass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenClassAccess().getGroup_4()); }
	(rule__OpenClass__Group_4__0)?
	{ after(grammarAccess.getOpenClassAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenClass__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenClassAccess().getGroup_5()); }
	(rule__OpenClass__Group_5__0)
	{ after(grammarAccess.getOpenClassAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpenClass__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenClass__Group_4__0__Impl
	rule__OpenClass__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenClassAccess().getExtendsKeyword_4_0()); }
	'extends'
	{ after(grammarAccess.getOpenClassAccess().getExtendsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenClass__Group_4__1__Impl
	rule__OpenClass__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenClassAccess().getSuperClassAssignment_4_1()); }
	(rule__OpenClass__SuperClassAssignment_4_1)
	{ after(grammarAccess.getOpenClassAccess().getSuperClassAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenClass__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenClassAccess().getGroup_4_2()); }
	(rule__OpenClass__Group_4_2__0)*
	{ after(grammarAccess.getOpenClassAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpenClass__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenClass__Group_4_2__0__Impl
	rule__OpenClass__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenClassAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getOpenClassAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenClass__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenClassAccess().getSuperClassAssignment_4_2_1()); }
	(rule__OpenClass__SuperClassAssignment_4_2_1)
	{ after(grammarAccess.getOpenClassAccess().getSuperClassAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpenClass__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenClass__Group_5__0__Impl
	rule__OpenClass__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenClassAccess().getLeftCurlyBracketKeyword_5_0()); }
	'{'
	{ after(grammarAccess.getOpenClassAccess().getLeftCurlyBracketKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenClass__Group_5__1__Impl
	rule__OpenClass__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenClassAccess().getFieldsAssignment_5_1()); }
	(rule__OpenClass__FieldsAssignment_5_1)*
	{ after(grammarAccess.getOpenClassAccess().getFieldsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenClass__Group_5__2__Impl
	rule__OpenClass__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenClassAccess().getMethodsAssignment_5_2()); }
	(rule__OpenClass__MethodsAssignment_5_2)*
	{ after(grammarAccess.getOpenClassAccess().getMethodsAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenClass__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenClassAccess().getRightCurlyBracketKeyword_5_3()); }
	'}'
	{ after(grammarAccess.getOpenClassAccess().getRightCurlyBracketKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NewClass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewClass__Group__0__Impl
	rule__NewClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewClassAccess().getNewClassAction_0()); }
	()
	{ after(grammarAccess.getNewClassAccess().getNewClassAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewClass__Group__1__Impl
	rule__NewClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewClassAccess().getClassKeyword_1()); }
	'class'
	{ after(grammarAccess.getNewClassAccess().getClassKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewClass__Group__2__Impl
	rule__NewClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewClassAccess().getNameAssignment_2()); }
	(rule__NewClass__NameAssignment_2)
	{ after(grammarAccess.getNewClassAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewClass__Group__3__Impl
	rule__NewClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewClassAccess().getGroup_3()); }
	(rule__NewClass__Group_3__0)?
	{ after(grammarAccess.getNewClassAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewClass__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewClassAccess().getGroup_4()); }
	(rule__NewClass__Group_4__0)
	{ after(grammarAccess.getNewClassAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NewClass__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewClass__Group_3__0__Impl
	rule__NewClass__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewClassAccess().getExtendsKeyword_3_0()); }
	'extends'
	{ after(grammarAccess.getNewClassAccess().getExtendsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewClass__Group_3__1__Impl
	rule__NewClass__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewClassAccess().getSuperClassAssignment_3_1()); }
	(rule__NewClass__SuperClassAssignment_3_1)
	{ after(grammarAccess.getNewClassAccess().getSuperClassAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewClass__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewClassAccess().getGroup_3_2()); }
	(rule__NewClass__Group_3_2__0)*
	{ after(grammarAccess.getNewClassAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NewClass__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewClass__Group_3_2__0__Impl
	rule__NewClass__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewClassAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getNewClassAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewClass__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewClassAccess().getSuperClassAssignment_3_2_1()); }
	(rule__NewClass__SuperClassAssignment_3_2_1)
	{ after(grammarAccess.getNewClassAccess().getSuperClassAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NewClass__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewClass__Group_4__0__Impl
	rule__NewClass__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewClassAccess().getLeftCurlyBracketKeyword_4_0()); }
	'{'
	{ after(grammarAccess.getNewClassAccess().getLeftCurlyBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewClass__Group_4__1__Impl
	rule__NewClass__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewClassAccess().getFieldsAssignment_4_1()); }
	(rule__NewClass__FieldsAssignment_4_1)*
	{ after(grammarAccess.getNewClassAccess().getFieldsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewClass__Group_4__2__Impl
	rule__NewClass__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewClassAccess().getMethodsAssignment_4_2()); }
	(rule__NewClass__MethodsAssignment_4_2)*
	{ after(grammarAccess.getNewClassAccess().getMethodsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewClass__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewClassAccess().getRightCurlyBracketKeyword_4_3()); }
	'}'
	{ after(grammarAccess.getNewClassAccess().getRightCurlyBracketKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_0__0__Impl
	rule__Field__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getPrimitiveFieldAction_0_0()); }
	()
	{ after(grammarAccess.getFieldAccess().getPrimitiveFieldAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_0__1__Impl
	rule__Field__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getTypeAssignment_0_1()); }
	(rule__Field__TypeAssignment_0_1)
	{ after(grammarAccess.getFieldAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_0__2__Impl
	rule__Field__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getNameAssignment_0_2()); }
	(rule__Field__NameAssignment_0_2)
	{ after(grammarAccess.getFieldAccess().getNameAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getSemicolonKeyword_0_3()); }
	';'
	{ after(grammarAccess.getFieldAccess().getSemicolonKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_1__0__Impl
	rule__Field__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getRefFieldAction_1_0()); }
	()
	{ after(grammarAccess.getFieldAccess().getRefFieldAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_1__1__Impl
	rule__Field__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getRefKeyword_1_1()); }
	'ref'
	{ after(grammarAccess.getFieldAccess().getRefKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_1__2__Impl
	rule__Field__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getTypeAssignment_1_2()); }
	(rule__Field__TypeAssignment_1_2)
	{ after(grammarAccess.getFieldAccess().getTypeAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_1__3__Impl
	rule__Field__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getNameAssignment_1_3()); }
	(rule__Field__NameAssignment_1_3)
	{ after(grammarAccess.getFieldAccess().getNameAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_1__4__Impl
	rule__Field__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getGroup_1_4()); }
	(rule__Field__Group_1_4__0)?
	{ after(grammarAccess.getFieldAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getSemicolonKeyword_1_5()); }
	';'
	{ after(grammarAccess.getFieldAccess().getSemicolonKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_1_4__0__Impl
	rule__Field__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getRevKeyword_1_4_0()); }
	'rev'
	{ after(grammarAccess.getFieldAccess().getRevKeyword_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getReverseAssignment_1_4_1()); }
	(rule__Field__ReverseAssignment_1_4_1)
	{ after(grammarAccess.getFieldAccess().getReverseAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_2__0__Impl
	rule__Field__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getContainmentFieldAction_2_0()); }
	()
	{ after(grammarAccess.getFieldAccess().getContainmentFieldAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_2__1__Impl
	rule__Field__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getContKeyword_2_1()); }
	'cont'
	{ after(grammarAccess.getFieldAccess().getContKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_2__2__Impl
	rule__Field__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getTypeAssignment_2_2()); }
	(rule__Field__TypeAssignment_2_2)
	{ after(grammarAccess.getFieldAccess().getTypeAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_2__3__Impl
	rule__Field__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getNameAssignment_2_3()); }
	(rule__Field__NameAssignment_2_3)
	{ after(grammarAccess.getFieldAccess().getNameAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getSemicolonKeyword_2_4()); }
	';'
	{ after(grammarAccess.getFieldAccess().getSemicolonKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefMethod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefMethod__Group__0__Impl
	rule__DefMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefMethodAccess().getTagsAssignment_0()); }
	(rule__DefMethod__TagsAssignment_0)*
	{ after(grammarAccess.getDefMethodAccess().getTagsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefMethod__Group__1__Impl
	rule__DefMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefMethodAccess().getDefKeyword_1()); }
	'def'
	{ after(grammarAccess.getDefMethodAccess().getDefKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefMethod__Group__2__Impl
	rule__DefMethod__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefMethodAccess().getAlternatives_2()); }
	(rule__DefMethod__Alternatives_2)
	{ after(grammarAccess.getDefMethodAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefMethod__Group__3__Impl
	rule__DefMethod__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefMethodAccess().getNameAssignment_3()); }
	(rule__DefMethod__NameAssignment_3)
	{ after(grammarAccess.getDefMethodAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefMethod__Group__4__Impl
	rule__DefMethod__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefMethodAccess().getGroup_4()); }
	(rule__DefMethod__Group_4__0)
	{ after(grammarAccess.getDefMethodAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefMethod__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefMethodAccess().getBlockAssignment_5()); }
	(rule__DefMethod__BlockAssignment_5)
	{ after(grammarAccess.getDefMethodAccess().getBlockAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefMethod__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefMethod__Group_4__0__Impl
	rule__DefMethod__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefMethodAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getDefMethodAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefMethod__Group_4__1__Impl
	rule__DefMethod__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefMethodAccess().getGroup_4_1()); }
	(rule__DefMethod__Group_4_1__0)?
	{ after(grammarAccess.getDefMethodAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefMethod__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefMethodAccess().getRightParenthesisKeyword_4_2()); }
	')'
	{ after(grammarAccess.getDefMethodAccess().getRightParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefMethod__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefMethod__Group_4_1__0__Impl
	rule__DefMethod__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefMethodAccess().getParamsAssignment_4_1_0()); }
	(rule__DefMethod__ParamsAssignment_4_1_0)
	{ after(grammarAccess.getDefMethodAccess().getParamsAssignment_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefMethod__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefMethodAccess().getGroup_4_1_1()); }
	(rule__DefMethod__Group_4_1_1__0)*
	{ after(grammarAccess.getDefMethodAccess().getGroup_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefMethod__Group_4_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefMethod__Group_4_1_1__0__Impl
	rule__DefMethod__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group_4_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefMethodAccess().getCommaKeyword_4_1_1_0()); }
	','
	{ after(grammarAccess.getDefMethodAccess().getCommaKeyword_4_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group_4_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefMethod__Group_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__Group_4_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefMethodAccess().getParamsAssignment_4_1_1_1()); }
	(rule__DefMethod__ParamsAssignment_4_1_1_1)
	{ after(grammarAccess.getDefMethodAccess().getParamsAssignment_4_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OverrideMethod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OverrideMethod__Group__0__Impl
	rule__OverrideMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOverrideMethodAccess().getTagsAssignment_0()); }
	(rule__OverrideMethod__TagsAssignment_0)*
	{ after(grammarAccess.getOverrideMethodAccess().getTagsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OverrideMethod__Group__1__Impl
	rule__OverrideMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOverrideMethodAccess().getOverrideKeyword_1()); }
	'override'
	{ after(grammarAccess.getOverrideMethodAccess().getOverrideKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OverrideMethod__Group__2__Impl
	rule__OverrideMethod__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOverrideMethodAccess().getTypeAssignment_2()); }
	(rule__OverrideMethod__TypeAssignment_2)
	{ after(grammarAccess.getOverrideMethodAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OverrideMethod__Group__3__Impl
	rule__OverrideMethod__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOverrideMethodAccess().getNameAssignment_3()); }
	(rule__OverrideMethod__NameAssignment_3)
	{ after(grammarAccess.getOverrideMethodAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OverrideMethod__Group__4__Impl
	rule__OverrideMethod__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOverrideMethodAccess().getGroup_4()); }
	(rule__OverrideMethod__Group_4__0)
	{ after(grammarAccess.getOverrideMethodAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OverrideMethod__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOverrideMethodAccess().getBlockAssignment_5()); }
	(rule__OverrideMethod__BlockAssignment_5)
	{ after(grammarAccess.getOverrideMethodAccess().getBlockAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OverrideMethod__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OverrideMethod__Group_4__0__Impl
	rule__OverrideMethod__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOverrideMethodAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getOverrideMethodAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OverrideMethod__Group_4__1__Impl
	rule__OverrideMethod__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOverrideMethodAccess().getGroup_4_1()); }
	(rule__OverrideMethod__Group_4_1__0)?
	{ after(grammarAccess.getOverrideMethodAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OverrideMethod__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOverrideMethodAccess().getRightParenthesisKeyword_4_2()); }
	')'
	{ after(grammarAccess.getOverrideMethodAccess().getRightParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OverrideMethod__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OverrideMethod__Group_4_1__0__Impl
	rule__OverrideMethod__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOverrideMethodAccess().getParamsAssignment_4_1_0()); }
	(rule__OverrideMethod__ParamsAssignment_4_1_0)
	{ after(grammarAccess.getOverrideMethodAccess().getParamsAssignment_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OverrideMethod__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOverrideMethodAccess().getGroup_4_1_1()); }
	(rule__OverrideMethod__Group_4_1_1__0)*
	{ after(grammarAccess.getOverrideMethodAccess().getGroup_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OverrideMethod__Group_4_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OverrideMethod__Group_4_1_1__0__Impl
	rule__OverrideMethod__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group_4_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOverrideMethodAccess().getCommaKeyword_4_1_1_0()); }
	','
	{ after(grammarAccess.getOverrideMethodAccess().getCommaKeyword_4_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group_4_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OverrideMethod__Group_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__Group_4_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOverrideMethodAccess().getParamsAssignment_4_1_1_1()); }
	(rule__OverrideMethod__ParamsAssignment_4_1_1_1)
	{ after(grammarAccess.getOverrideMethodAccess().getParamsAssignment_4_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__0__Impl
	rule__Statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getVarAssignParserRuleCall_0_0()); }
	ruleVarAssign
	{ after(grammarAccess.getStatementAccess().getVarAssignParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_0_1()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_4__0__Impl
	rule__Statement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getLetStatementParserRuleCall_4_0()); }
	ruleLetStatement
	{ after(grammarAccess.getStatementAccess().getLetStatementParserRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_4_1()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_5__0__Impl
	rule__Statement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_5_0()); }
	ruleReturnStatement
	{ after(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_5_1()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_6__0__Impl
	rule__Statement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getExpressionParserRuleCall_6_0()); }
	ruleExpression
	{ after(grammarAccess.getStatementAccess().getExpressionParserRuleCall_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_6_1()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_7__0__Impl
	rule__Statement__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getDebugStatementParserRuleCall_7_0()); }
	ruleDebugStatement
	{ after(grammarAccess.getStatementAccess().getDebugStatementParserRuleCall_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_7_1()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DebugStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DebugStatement__Group__0__Impl
	rule__DebugStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DebugStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDebugStatementAccess().getDebugStatementAction_0()); }
	()
	{ after(grammarAccess.getDebugStatementAccess().getDebugStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DebugStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DebugStatement__Group__1__Impl
	rule__DebugStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DebugStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDebugStatementAccess().getDebugKeyword_1()); }
	'debug'
	{ after(grammarAccess.getDebugStatementAccess().getDebugKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DebugStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DebugStatement__Group__2__Impl
	rule__DebugStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DebugStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDebugStatementAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getDebugStatementAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DebugStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DebugStatement__Group__3__Impl
	rule__DebugStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DebugStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDebugStatementAccess().getExprAssignment_3()); }
	(rule__DebugStatement__ExprAssignment_3)
	{ after(grammarAccess.getDebugStatementAccess().getExprAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DebugStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DebugStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DebugStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDebugStatementAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getDebugStatementAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getReturnStatementAction_0()); }
	()
	{ after(grammarAccess.getReturnStatementAccess().getReturnStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__1__Impl
	rule__ReturnStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getReturnKeyword_1()); }
	'return'
	{ after(grammarAccess.getReturnStatementAccess().getReturnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getReturnedAssignment_2()); }
	(rule__ReturnStatement__ReturnedAssignment_2)
	{ after(grammarAccess.getReturnStatementAccess().getReturnedAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LetStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetStatement__Group__0__Impl
	rule__LetStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetStatementAccess().getLetStatementAction_0()); }
	()
	{ after(grammarAccess.getLetStatementAccess().getLetStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetStatement__Group__1__Impl
	rule__LetStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetStatementAccess().getLetKeyword_1()); }
	'let'
	{ after(grammarAccess.getLetStatementAccess().getLetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetStatement__Group__2__Impl
	rule__LetStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetStatementAccess().getBindingsAssignment_2()); }
	(rule__LetStatement__BindingsAssignment_2)
	{ after(grammarAccess.getLetStatementAccess().getBindingsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetStatement__Group__3__Impl
	rule__LetStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetStatementAccess().getGroup_3()); }
	(rule__LetStatement__Group_3__0)*
	{ after(grammarAccess.getLetStatementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetStatement__Group__4__Impl
	rule__LetStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetStatementAccess().getInKeyword_4()); }
	'in'
	{ after(grammarAccess.getLetStatementAccess().getInKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetStatementAccess().getBlockAssignment_5()); }
	(rule__LetStatement__BlockAssignment_5)
	{ after(grammarAccess.getLetStatementAccess().getBlockAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LetStatement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetStatement__Group_3__0__Impl
	rule__LetStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetStatementAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getLetStatementAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetStatementAccess().getBindingsAssignment_3_1()); }
	(rule__LetStatement__BindingsAssignment_3_1)
	{ after(grammarAccess.getLetStatementAccess().getBindingsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfStatementAction_0()); }
	()
	{ after(grammarAccess.getIfStatementAccess().getIfStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfKeyword_1()); }
	'if'
	{ after(grammarAccess.getIfStatementAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getConditionAssignment_3()); }
	(rule__IfStatement__ConditionAssignment_3)
	{ after(grammarAccess.getIfStatementAccess().getConditionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__5__Impl
	rule__IfStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getThenBranchAssignment_5()); }
	(rule__IfStatement__ThenBranchAssignment_5)
	{ after(grammarAccess.getIfStatementAccess().getThenBranchAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_6()); }
	(rule__IfStatement__Group_6__0)?
	{ after(grammarAccess.getIfStatementAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_6__0__Impl
	rule__IfStatement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseKeyword_6_0()); }
	'else'
	{ after(grammarAccess.getIfStatementAccess().getElseKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseBranchAssignment_6_1()); }
	(rule__IfStatement__ElseBranchAssignment_6_1)
	{ after(grammarAccess.getIfStatementAccess().getElseBranchAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getWhileStatementAction_0()); }
	()
	{ after(grammarAccess.getWhileStatementAccess().getWhileStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getWhileKeyword_1()); }
	'while'
	{ after(grammarAccess.getWhileStatementAccess().getWhileKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__2__Impl
	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__3__Impl
	rule__WhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getConditionAssignment_3()); }
	(rule__WhileStatement__ConditionAssignment_3)
	{ after(grammarAccess.getWhileStatementAccess().getConditionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__4__Impl
	rule__WhileStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getWhileBlockAssignment_5()); }
	(rule__WhileStatement__WhileBlockAssignment_5)
	{ after(grammarAccess.getWhileStatementAccess().getWhileBlockAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__0__Impl
	rule__ForLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getForLoopAction_0()); }
	()
	{ after(grammarAccess.getForLoopAccess().getForLoopAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__1__Impl
	rule__ForLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getForKeyword_1()); }
	'for'
	{ after(grammarAccess.getForLoopAccess().getForKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__2__Impl
	rule__ForLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__3__Impl
	rule__ForLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getTypeAssignment_3()); }
	(rule__ForLoop__TypeAssignment_3)
	{ after(grammarAccess.getForLoopAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__4__Impl
	rule__ForLoop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getNameAssignment_4()); }
	(rule__ForLoop__NameAssignment_4)
	{ after(grammarAccess.getForLoopAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__5__Impl
	rule__ForLoop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getInKeyword_5()); }
	'in'
	{ after(grammarAccess.getForLoopAccess().getInKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__6__Impl
	rule__ForLoop__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getCollectionAssignment_6()); }
	(rule__ForLoop__CollectionAssignment_6)
	{ after(grammarAccess.getForLoopAccess().getCollectionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__7__Impl
	rule__ForLoop__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getForLoopAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getBlockAssignment_8()); }
	(rule__ForLoop__BlockAssignment_8)
	{ after(grammarAccess.getForLoopAccess().getBlockAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
	()
	{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__2__Impl
	rule__Block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getBodyAssignment_2()); }
	(rule__Block__BodyAssignment_2)*
	{ after(grammarAccess.getBlockAccess().getBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarAssign__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarAssign__Group_0__0__Impl
	rule__VarAssign__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAssignAccess().getVarDeclarationAction_0_0()); }
	()
	{ after(grammarAccess.getVarAssignAccess().getVarDeclarationAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarAssign__Group_0__1__Impl
	rule__VarAssign__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAssignAccess().getTypeAssignment_0_1()); }
	(rule__VarAssign__TypeAssignment_0_1)
	{ after(grammarAccess.getVarAssignAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarAssign__Group_0__2__Impl
	rule__VarAssign__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAssignAccess().getNameAssignment_0_2()); }
	(rule__VarAssign__NameAssignment_0_2)
	{ after(grammarAccess.getVarAssignAccess().getNameAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarAssign__Group_0__3__Impl
	rule__VarAssign__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAssignAccess().getEqualsSignKeyword_0_3()); }
	'='
	{ after(grammarAccess.getVarAssignAccess().getEqualsSignKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarAssign__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAssignAccess().getValueAssignment_0_4()); }
	(rule__VarAssign__ValueAssignment_0_4)
	{ after(grammarAccess.getVarAssignAccess().getValueAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarAssign__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarAssign__Group_1__0__Impl
	rule__VarAssign__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAssignAccess().getVarAssignAction_1_0()); }
	()
	{ after(grammarAccess.getVarAssignAccess().getVarAssignAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarAssign__Group_1__1__Impl
	rule__VarAssign__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAssignAccess().getNameAssignment_1_1()); }
	(rule__VarAssign__NameAssignment_1_1)
	{ after(grammarAccess.getVarAssignAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarAssign__Group_1__2__Impl
	rule__VarAssign__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAssignAccess().getEqualsSignKeyword_1_2()); }
	'='
	{ after(grammarAccess.getVarAssignAccess().getEqualsSignKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarAssign__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAssignAccess().getValueAssignment_1_3()); }
	(rule__VarAssign__ValueAssignment_1_3)
	{ after(grammarAccess.getVarAssignAccess().getValueAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesOperation__Group__0__Impl
	rule__ImpliesOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesOperationAccess().getBooleanOperationParserRuleCall_0()); }
	ruleBooleanOperation
	{ after(grammarAccess.getImpliesOperationAccess().getBooleanOperationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesOperationAccess().getGroup_1()); }
	(rule__ImpliesOperation__Group_1__0)*
	{ after(grammarAccess.getImpliesOperationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesOperation__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesOperationAccess().getGroup_1_0()); }
	(rule__ImpliesOperation__Group_1_0__0)
	{ after(grammarAccess.getImpliesOperationAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesOperation__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesOperation__Group_1_0__0__Impl
	rule__ImpliesOperation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesOperation__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesOperationAccess().getGroup_1_0_0()); }
	(rule__ImpliesOperation__Group_1_0_0__0)
	{ after(grammarAccess.getImpliesOperationAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesOperation__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesOperation__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesOperation__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesOperationAccess().getRightAssignment_1_0_1()); }
	(rule__ImpliesOperation__RightAssignment_1_0_1)
	{ after(grammarAccess.getImpliesOperationAccess().getRightAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesOperation__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesOperation__Group_1_0_0__0__Impl
	rule__ImpliesOperation__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesOperation__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesOperationAccess().getImpliesOperationLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getImpliesOperationAccess().getImpliesOperationLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesOperation__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesOperation__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesOperation__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesOperationAccess().getImpliesKeyword_1_0_0_1()); }
	'implies'
	{ after(grammarAccess.getImpliesOperationAccess().getImpliesKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperation__Group__0__Impl
	rule__BooleanOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationAccess().getCompareOperationParserRuleCall_0()); }
	ruleCompareOperation
	{ after(grammarAccess.getBooleanOperationAccess().getCompareOperationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationAccess().getGroup_1()); }
	(rule__BooleanOperation__Group_1__0)*
	{ after(grammarAccess.getBooleanOperationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperation__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationAccess().getGroup_1_0()); }
	(rule__BooleanOperation__Group_1_0__0)
	{ after(grammarAccess.getBooleanOperationAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanOperation__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperation__Group_1_0__0__Impl
	rule__BooleanOperation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationAccess().getAlternatives_1_0_0()); }
	(rule__BooleanOperation__Alternatives_1_0_0)
	{ after(grammarAccess.getBooleanOperationAccess().getAlternatives_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperation__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationAccess().getRightAssignment_1_0_1()); }
	(rule__BooleanOperation__RightAssignment_1_0_1)
	{ after(grammarAccess.getBooleanOperationAccess().getRightAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanOperation__Group_1_0_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperation__Group_1_0_0_0__0__Impl
	rule__BooleanOperation__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Group_1_0_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationAccess().getBooleanOrOperationLeftAction_1_0_0_0_0()); }
	()
	{ after(grammarAccess.getBooleanOperationAccess().getBooleanOrOperationLeftAction_1_0_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Group_1_0_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperation__Group_1_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Group_1_0_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationAccess().getOrKeyword_1_0_0_0_1()); }
	'or'
	{ after(grammarAccess.getBooleanOperationAccess().getOrKeyword_1_0_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanOperation__Group_1_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperation__Group_1_0_0_1__0__Impl
	rule__BooleanOperation__Group_1_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Group_1_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationAccess().getBooleanAndOperationLeftAction_1_0_0_1_0()); }
	()
	{ after(grammarAccess.getBooleanOperationAccess().getBooleanAndOperationLeftAction_1_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Group_1_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperation__Group_1_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Group_1_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationAccess().getAndKeyword_1_0_0_1_1()); }
	'and'
	{ after(grammarAccess.getBooleanOperationAccess().getAndKeyword_1_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanOperation__Group_1_0_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperation__Group_1_0_0_2__0__Impl
	rule__BooleanOperation__Group_1_0_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Group_1_0_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationAccess().getBooleanXorOperationLeftAction_1_0_0_2_0()); }
	()
	{ after(grammarAccess.getBooleanOperationAccess().getBooleanXorOperationLeftAction_1_0_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Group_1_0_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperation__Group_1_0_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__Group_1_0_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationAccess().getXorKeyword_1_0_0_2_1()); }
	'xor'
	{ after(grammarAccess.getBooleanOperationAccess().getXorKeyword_1_0_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group__0__Impl
	rule__CompareOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getEqualityOperationParserRuleCall_0()); }
	ruleEqualityOperation
	{ after(grammarAccess.getCompareOperationAccess().getEqualityOperationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getGroup_1()); }
	(rule__CompareOperation__Group_1__0)*
	{ after(grammarAccess.getCompareOperationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getGroup_1_0()); }
	(rule__CompareOperation__Group_1_0__0)
	{ after(grammarAccess.getCompareOperationAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group_1_0__0__Impl
	rule__CompareOperation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getAlternatives_1_0_0()); }
	(rule__CompareOperation__Alternatives_1_0_0)
	{ after(grammarAccess.getCompareOperationAccess().getAlternatives_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getRightAssignment_1_0_1()); }
	(rule__CompareOperation__RightAssignment_1_0_1)
	{ after(grammarAccess.getCompareOperationAccess().getRightAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_1_0_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group_1_0_0_0__0__Impl
	rule__CompareOperation__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getCompareLEOperationLeftAction_1_0_0_0_0()); }
	()
	{ after(grammarAccess.getCompareOperationAccess().getCompareLEOperationLeftAction_1_0_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group_1_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getLessThanSignEqualsSignKeyword_1_0_0_0_1()); }
	'<='
	{ after(grammarAccess.getCompareOperationAccess().getLessThanSignEqualsSignKeyword_1_0_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_1_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group_1_0_0_1__0__Impl
	rule__CompareOperation__Group_1_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getCompareGEOperationLeftAction_1_0_0_1_0()); }
	()
	{ after(grammarAccess.getCompareOperationAccess().getCompareGEOperationLeftAction_1_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group_1_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getGreaterThanSignEqualsSignKeyword_1_0_0_1_1()); }
	'>='
	{ after(grammarAccess.getCompareOperationAccess().getGreaterThanSignEqualsSignKeyword_1_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_1_0_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group_1_0_0_2__0__Impl
	rule__CompareOperation__Group_1_0_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getCompareNEOperationLeftAction_1_0_0_2_0()); }
	()
	{ after(grammarAccess.getCompareOperationAccess().getCompareNEOperationLeftAction_1_0_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group_1_0_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getExclamationMarkEqualsSignKeyword_1_0_0_2_1()); }
	'!='
	{ after(grammarAccess.getCompareOperationAccess().getExclamationMarkEqualsSignKeyword_1_0_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_1_0_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group_1_0_0_3__0__Impl
	rule__CompareOperation__Group_1_0_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getCompareLOperationLeftAction_1_0_0_3_0()); }
	()
	{ after(grammarAccess.getCompareOperationAccess().getCompareLOperationLeftAction_1_0_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group_1_0_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getLessThanSignKeyword_1_0_0_3_1()); }
	'<'
	{ after(grammarAccess.getCompareOperationAccess().getLessThanSignKeyword_1_0_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_1_0_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group_1_0_0_4__0__Impl
	rule__CompareOperation__Group_1_0_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getCompareGOperationLeftAction_1_0_0_4_0()); }
	()
	{ after(grammarAccess.getCompareOperationAccess().getCompareGOperationLeftAction_1_0_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group_1_0_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getGreaterThanSignKeyword_1_0_0_4_1()); }
	'>'
	{ after(grammarAccess.getCompareOperationAccess().getGreaterThanSignKeyword_1_0_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_1_0_0_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group_1_0_0_5__0__Impl
	rule__CompareOperation__Group_1_0_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getInstanceofOperationLeftAction_1_0_0_5_0()); }
	()
	{ after(grammarAccess.getCompareOperationAccess().getInstanceofOperationLeftAction_1_0_0_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group_1_0_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getInstanceofKeyword_1_0_0_5_1()); }
	'instanceof'
	{ after(grammarAccess.getCompareOperationAccess().getInstanceofKeyword_1_0_0_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_1_0_0_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group_1_0_0_6__0__Impl
	rule__CompareOperation__Group_1_0_0_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getCasttoOperationLeftAction_1_0_0_6_0()); }
	()
	{ after(grammarAccess.getCompareOperationAccess().getCasttoOperationLeftAction_1_0_0_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareOperation__Group_1_0_0_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1_0_0_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareOperationAccess().getCasttoKeyword_1_0_0_6_1()); }
	'castto'
	{ after(grammarAccess.getCompareOperationAccess().getCasttoKeyword_1_0_0_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityOperation__Group__0__Impl
	rule__EqualityOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityOperationAccess().getMultOperationParserRuleCall_0()); }
	ruleMultOperation
	{ after(grammarAccess.getEqualityOperationAccess().getMultOperationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityOperationAccess().getGroup_1()); }
	(rule__EqualityOperation__Group_1__0)*
	{ after(grammarAccess.getEqualityOperationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityOperation__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityOperationAccess().getGroup_1_0()); }
	(rule__EqualityOperation__Group_1_0__0)
	{ after(grammarAccess.getEqualityOperationAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityOperation__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityOperation__Group_1_0__0__Impl
	rule__EqualityOperation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOperation__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityOperationAccess().getEqualityOperationLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getEqualityOperationAccess().getEqualityOperationLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOperation__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityOperation__Group_1_0__1__Impl
	rule__EqualityOperation__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOperation__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityOperationAccess().getOpAssignment_1_0_1()); }
	(rule__EqualityOperation__OpAssignment_1_0_1)
	{ after(grammarAccess.getEqualityOperationAccess().getOpAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOperation__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityOperation__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOperation__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityOperationAccess().getRightAssignment_1_0_2()); }
	(rule__EqualityOperation__RightAssignment_1_0_2)
	{ after(grammarAccess.getEqualityOperationAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultOperation__Group__0__Impl
	rule__MultOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultOperationAccess().getAddOperationParserRuleCall_0()); }
	ruleAddOperation
	{ after(grammarAccess.getMultOperationAccess().getAddOperationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultOperationAccess().getGroup_1()); }
	(rule__MultOperation__Group_1__0)*
	{ after(grammarAccess.getMultOperationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultOperation__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultOperationAccess().getGroup_1_0()); }
	(rule__MultOperation__Group_1_0__0)
	{ after(grammarAccess.getMultOperationAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultOperation__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultOperation__Group_1_0__0__Impl
	rule__MultOperation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultOperationAccess().getAlternatives_1_0_0()); }
	(rule__MultOperation__Alternatives_1_0_0)
	{ after(grammarAccess.getMultOperationAccess().getAlternatives_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultOperation__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultOperationAccess().getRightAssignment_1_0_1()); }
	(rule__MultOperation__RightAssignment_1_0_1)
	{ after(grammarAccess.getMultOperationAccess().getRightAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultOperation__Group_1_0_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultOperation__Group_1_0_0_0__0__Impl
	rule__MultOperation__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Group_1_0_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultOperationAccess().getMultOperationLeftAction_1_0_0_0_0()); }
	()
	{ after(grammarAccess.getMultOperationAccess().getMultOperationLeftAction_1_0_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Group_1_0_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultOperation__Group_1_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Group_1_0_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultOperationAccess().getAsteriskKeyword_1_0_0_0_1()); }
	'*'
	{ after(grammarAccess.getMultOperationAccess().getAsteriskKeyword_1_0_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultOperation__Group_1_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultOperation__Group_1_0_0_1__0__Impl
	rule__MultOperation__Group_1_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Group_1_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultOperationAccess().getDivOperationLeftAction_1_0_0_1_0()); }
	()
	{ after(grammarAccess.getMultOperationAccess().getDivOperationLeftAction_1_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Group_1_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultOperation__Group_1_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Group_1_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultOperationAccess().getSolidusKeyword_1_0_0_1_1()); }
	'/'
	{ after(grammarAccess.getMultOperationAccess().getSolidusKeyword_1_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOperation__Group__0__Impl
	rule__AddOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOperationAccess().getChaindedCallParserRuleCall_0()); }
	ruleChaindedCall
	{ after(grammarAccess.getAddOperationAccess().getChaindedCallParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOperationAccess().getGroup_1()); }
	(rule__AddOperation__Group_1__0)*
	{ after(grammarAccess.getAddOperationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOperation__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOperationAccess().getGroup_1_0()); }
	(rule__AddOperation__Group_1_0__0)
	{ after(grammarAccess.getAddOperationAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddOperation__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOperation__Group_1_0__0__Impl
	rule__AddOperation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOperation__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOperationAccess().getAlternatives_1_0_0()); }
	(rule__AddOperation__Alternatives_1_0_0)
	{ after(grammarAccess.getAddOperationAccess().getAlternatives_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOperation__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOperation__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOperation__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOperationAccess().getRightAssignment_1_0_1()); }
	(rule__AddOperation__RightAssignment_1_0_1)
	{ after(grammarAccess.getAddOperationAccess().getRightAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddOperation__Group_1_0_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOperation__Group_1_0_0_0__0__Impl
	rule__AddOperation__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOperation__Group_1_0_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOperationAccess().getAddOperationLeftAction_1_0_0_0_0()); }
	()
	{ after(grammarAccess.getAddOperationAccess().getAddOperationLeftAction_1_0_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOperation__Group_1_0_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOperation__Group_1_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOperation__Group_1_0_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOperationAccess().getPlusSignKeyword_1_0_0_0_1()); }
	'+'
	{ after(grammarAccess.getAddOperationAccess().getPlusSignKeyword_1_0_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddOperation__Group_1_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOperation__Group_1_0_0_1__0__Impl
	rule__AddOperation__Group_1_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOperation__Group_1_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOperationAccess().getSubOperationLeftAction_1_0_0_1_0()); }
	()
	{ after(grammarAccess.getAddOperationAccess().getSubOperationLeftAction_1_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOperation__Group_1_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddOperation__Group_1_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOperation__Group_1_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddOperationAccess().getHyphenMinusKeyword_1_0_0_1_1()); }
	'-'
	{ after(grammarAccess.getAddOperationAccess().getHyphenMinusKeyword_1_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChaindedCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaindedCall__Group__0__Impl
	rule__ChaindedCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaindedCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaindedCallAccess().getInfixOperationParserRuleCall_0()); }
	ruleInfixOperation
	{ after(grammarAccess.getChaindedCallAccess().getInfixOperationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaindedCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaindedCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaindedCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaindedCallAccess().getGroup_1()); }
	(rule__ChaindedCall__Group_1__0)*
	{ after(grammarAccess.getChaindedCallAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChaindedCall__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaindedCall__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaindedCall__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaindedCallAccess().getGroup_1_0()); }
	(rule__ChaindedCall__Group_1_0__0)
	{ after(grammarAccess.getChaindedCallAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChaindedCall__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaindedCall__Group_1_0__0__Impl
	rule__ChaindedCall__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaindedCall__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaindedCallAccess().getAlternatives_1_0_0()); }
	(rule__ChaindedCall__Alternatives_1_0_0)
	{ after(grammarAccess.getChaindedCallAccess().getAlternatives_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaindedCall__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaindedCall__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaindedCall__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaindedCallAccess().getRightAssignment_1_0_1()); }
	(rule__ChaindedCall__RightAssignment_1_0_1)
	{ after(grammarAccess.getChaindedCallAccess().getRightAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChaindedCall__Group_1_0_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaindedCall__Group_1_0_0_0__0__Impl
	rule__ChaindedCall__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaindedCall__Group_1_0_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaindedCallAccess().getChainedCallLeftAction_1_0_0_0_0()); }
	()
	{ after(grammarAccess.getChaindedCallAccess().getChainedCallLeftAction_1_0_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaindedCall__Group_1_0_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaindedCall__Group_1_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaindedCall__Group_1_0_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaindedCallAccess().getFullStopKeyword_1_0_0_0_1()); }
	'.'
	{ after(grammarAccess.getChaindedCallAccess().getFullStopKeyword_1_0_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChaindedCall__Group_1_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaindedCall__Group_1_0_0_1__0__Impl
	rule__ChaindedCall__Group_1_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaindedCall__Group_1_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaindedCallAccess().getChainedCallArrowLeftAction_1_0_0_1_0()); }
	()
	{ after(grammarAccess.getChaindedCallAccess().getChainedCallArrowLeftAction_1_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaindedCall__Group_1_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaindedCall__Group_1_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaindedCall__Group_1_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaindedCallAccess().getHyphenMinusGreaterThanSignKeyword_1_0_0_1_1()); }
	'->'
	{ after(grammarAccess.getChaindedCallAccess().getHyphenMinusGreaterThanSignKeyword_1_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixOperation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_0__0__Impl
	rule__InfixOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getNotInfixOperationAction_0_0()); }
	()
	{ after(grammarAccess.getInfixOperationAccess().getNotInfixOperationAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_0__1__Impl
	rule__InfixOperation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getNotKeyword_0_1()); }
	'not'
	{ after(grammarAccess.getInfixOperationAccess().getNotKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getExpressionAssignment_0_2()); }
	(rule__InfixOperation__ExpressionAssignment_0_2)
	{ after(grammarAccess.getInfixOperationAccess().getExpressionAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_1__0__Impl
	rule__InfixOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getNegInfixOperationAction_1_0()); }
	()
	{ after(grammarAccess.getInfixOperationAccess().getNegInfixOperationAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_1__1__Impl
	rule__InfixOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getHyphenMinusKeyword_1_1()); }
	'-'
	{ after(grammarAccess.getInfixOperationAccess().getHyphenMinusKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getExpressionAssignment_1_2()); }
	(rule__InfixOperation__ExpressionAssignment_1_2)
	{ after(grammarAccess.getInfixOperationAccess().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixOperation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_2__0__Impl
	rule__InfixOperation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getNewSequenceAction_2_0()); }
	()
	{ after(grammarAccess.getInfixOperationAccess().getNewSequenceAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_2__1__Impl
	rule__InfixOperation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getNewSequenceKeyword_2_1()); }
	'newSequence'
	{ after(grammarAccess.getInfixOperationAccess().getNewSequenceKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_2__2__Impl
	rule__InfixOperation__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getLeftParenthesisKeyword_2_2()); }
	'('
	{ after(grammarAccess.getInfixOperationAccess().getLeftParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_2__3__Impl
	rule__InfixOperation__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getTypeAssignment_2_3()); }
	(rule__InfixOperation__TypeAssignment_2_3)
	{ after(grammarAccess.getInfixOperationAccess().getTypeAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getRightParenthesisKeyword_2_4()); }
	')'
	{ after(grammarAccess.getInfixOperationAccess().getRightParenthesisKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixOperation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_3__0__Impl
	rule__InfixOperation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getConstructorOperationAction_3_0()); }
	()
	{ after(grammarAccess.getInfixOperationAccess().getConstructorOperationAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_3__1__Impl
	rule__InfixOperation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getNewKeyword_3_1()); }
	'new'
	{ after(grammarAccess.getInfixOperationAccess().getNewKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_3__2__Impl
	rule__InfixOperation__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getNameAssignment_3_2()); }
	(rule__InfixOperation__NameAssignment_3_2)
	{ after(grammarAccess.getInfixOperationAccess().getNameAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_3__3__Impl
	rule__InfixOperation__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getLeftParenthesisKeyword_3_3()); }
	'('
	{ after(grammarAccess.getInfixOperationAccess().getLeftParenthesisKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getRightParenthesisKeyword_3_4()); }
	')'
	{ after(grammarAccess.getInfixOperationAccess().getRightParenthesisKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixOperation__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_4__0__Impl
	rule__InfixOperation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getOperationCallOperationAction_4_0()); }
	()
	{ after(grammarAccess.getInfixOperationAccess().getOperationCallOperationAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_4__1__Impl
	rule__InfixOperation__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getNameAssignment_4_1()); }
	(rule__InfixOperation__NameAssignment_4_1)
	{ after(grammarAccess.getInfixOperationAccess().getNameAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getGroup_4_2()); }
	(rule__InfixOperation__Group_4_2__0)
	{ after(grammarAccess.getInfixOperationAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixOperation__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_4_2__0__Impl
	rule__InfixOperation__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getLeftParenthesisKeyword_4_2_0()); }
	'('
	{ after(grammarAccess.getInfixOperationAccess().getLeftParenthesisKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_4_2__1__Impl
	rule__InfixOperation__Group_4_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getGroup_4_2_1()); }
	(rule__InfixOperation__Group_4_2_1__0)?
	{ after(grammarAccess.getInfixOperationAccess().getGroup_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_4_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_4_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_4_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getRightParenthesisKeyword_4_2_2()); }
	')'
	{ after(grammarAccess.getInfixOperationAccess().getRightParenthesisKeyword_4_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixOperation__Group_4_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_4_2_1__0__Impl
	rule__InfixOperation__Group_4_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_4_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getParametersAssignment_4_2_1_0()); }
	(rule__InfixOperation__ParametersAssignment_4_2_1_0)
	{ after(grammarAccess.getInfixOperationAccess().getParametersAssignment_4_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_4_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_4_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_4_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getGroup_4_2_1_1()); }
	(rule__InfixOperation__Group_4_2_1_1__0)*
	{ after(grammarAccess.getInfixOperationAccess().getGroup_4_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InfixOperation__Group_4_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_4_2_1_1__0__Impl
	rule__InfixOperation__Group_4_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_4_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getCommaKeyword_4_2_1_1_0()); }
	','
	{ after(grammarAccess.getInfixOperationAccess().getCommaKeyword_4_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_4_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InfixOperation__Group_4_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__Group_4_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInfixOperationAccess().getParametersAssignment_4_2_1_1_1()); }
	(rule__InfixOperation__ParametersAssignment_4_2_1_1_1)
	{ after(grammarAccess.getInfixOperationAccess().getParametersAssignment_4_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParamCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamCall__Group__0__Impl
	rule__ParamCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamCallAccess().getGroup_0()); }
	(rule__ParamCall__Group_0__0)?
	{ after(grammarAccess.getParamCallAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamCallAccess().getExpressionAssignment_1()); }
	(rule__ParamCall__ExpressionAssignment_1)
	{ after(grammarAccess.getParamCallAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParamCall__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamCall__Group_0__0__Impl
	rule__ParamCall__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCall__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamCallAccess().getLambdaAssignment_0_0()); }
	(rule__ParamCall__LambdaAssignment_0_0)
	{ after(grammarAccess.getParamCallAccess().getLambdaAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCall__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamCall__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCall__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamCallAccess().getVerticalLineKeyword_0_1()); }
	'|'
	{ after(grammarAccess.getParamCallAccess().getVerticalLineKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicLiteral__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_0__0__Impl
	rule__AtomicLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getAtomicLiteralAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_0__1__Impl
	rule__AtomicLiteral__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getExpressionParserRuleCall_0_1()); }
	ruleExpression
	{ after(grammarAccess.getAtomicLiteralAccess().getExpressionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getAtomicLiteralAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicLiteral__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_1__0__Impl
	rule__AtomicLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getOADenotAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicLiteralAccess().getOADenotAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_1__1__Impl
	rule__AtomicLiteral__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getDollarSignKeyword_1_1()); }
	'$'
	{ after(grammarAccess.getAtomicLiteralAccess().getDollarSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_1__2__Impl
	rule__AtomicLiteral__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getLeftSquareBracketKeyword_1_2()); }
	'['
	{ after(grammarAccess.getAtomicLiteralAccess().getLeftSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_1__3__Impl
	rule__AtomicLiteral__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getExpAssignment_1_3()); }
	(rule__AtomicLiteral__ExpAssignment_1_3)
	{ after(grammarAccess.getAtomicLiteralAccess().getExpAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getRightSquareBracketKeyword_1_4()); }
	']'
	{ after(grammarAccess.getAtomicLiteralAccess().getRightSquareBracketKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicLiteral__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_2__0__Impl
	rule__AtomicLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getSelfRefAction_2_0()); }
	()
	{ after(grammarAccess.getAtomicLiteralAccess().getSelfRefAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getSelfKeyword_2_1()); }
	'self'
	{ after(grammarAccess.getAtomicLiteralAccess().getSelfKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicLiteral__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_3__0__Impl
	rule__AtomicLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getSuperRefAction_3_0()); }
	()
	{ after(grammarAccess.getAtomicLiteralAccess().getSuperRefAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getSuperKeyword_3_1()); }
	'super'
	{ after(grammarAccess.getAtomicLiteralAccess().getSuperKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicLiteral__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_4__0__Impl
	rule__AtomicLiteral__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getStringLiteralAction_4_0()); }
	()
	{ after(grammarAccess.getAtomicLiteralAccess().getStringLiteralAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getValueAssignment_4_1()); }
	(rule__AtomicLiteral__ValueAssignment_4_1)
	{ after(grammarAccess.getAtomicLiteralAccess().getValueAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicLiteral__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_5__0__Impl
	rule__AtomicLiteral__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getIntLiteralAction_5_0()); }
	()
	{ after(grammarAccess.getAtomicLiteralAccess().getIntLiteralAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getValueAssignment_5_1()); }
	(rule__AtomicLiteral__ValueAssignment_5_1)
	{ after(grammarAccess.getAtomicLiteralAccess().getValueAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicLiteral__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_6__0__Impl
	rule__AtomicLiteral__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getRealLiteralAction_6_0()); }
	()
	{ after(grammarAccess.getAtomicLiteralAccess().getRealLiteralAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getValueAssignment_6_1()); }
	(rule__AtomicLiteral__ValueAssignment_6_1)
	{ after(grammarAccess.getAtomicLiteralAccess().getValueAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicLiteral__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_7__0__Impl
	rule__AtomicLiteral__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getBooleanLiteralAction_7_0()); }
	()
	{ after(grammarAccess.getAtomicLiteralAccess().getBooleanLiteralAction_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getValueAssignment_7_1()); }
	(rule__AtomicLiteral__ValueAssignment_7_1)
	{ after(grammarAccess.getAtomicLiteralAccess().getValueAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicLiteral__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_8__0__Impl
	rule__AtomicLiteral__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getNullLiteralAction_8_0()); }
	()
	{ after(grammarAccess.getAtomicLiteralAccess().getNullLiteralAction_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getNULLTerminalRuleCall_8_1()); }
	RULE_NULL
	{ after(grammarAccess.getAtomicLiteralAccess().getNULLTerminalRuleCall_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicLiteral__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_9__0__Impl
	rule__AtomicLiteral__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getIntRangeAction_9_0()); }
	()
	{ after(grammarAccess.getAtomicLiteralAccess().getIntRangeAction_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_9__1__Impl
	rule__AtomicLiteral__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getLeftSquareBracketKeyword_9_1()); }
	'['
	{ after(grammarAccess.getAtomicLiteralAccess().getLeftSquareBracketKeyword_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_9__2__Impl
	rule__AtomicLiteral__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getStartAssignment_9_2()); }
	(rule__AtomicLiteral__StartAssignment_9_2)
	{ after(grammarAccess.getAtomicLiteralAccess().getStartAssignment_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_9__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_9__3__Impl
	rule__AtomicLiteral__Group_9__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_9__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getFullStopKeyword_9_3()); }
	'.'
	{ after(grammarAccess.getAtomicLiteralAccess().getFullStopKeyword_9_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_9__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_9__4__Impl
	rule__AtomicLiteral__Group_9__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_9__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getFullStopKeyword_9_4()); }
	'.'
	{ after(grammarAccess.getAtomicLiteralAccess().getFullStopKeyword_9_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_9__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_9__5__Impl
	rule__AtomicLiteral__Group_9__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_9__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getStopAssignment_9_5()); }
	(rule__AtomicLiteral__StopAssignment_9_5)
	{ after(grammarAccess.getAtomicLiteralAccess().getStopAssignment_9_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_9__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_9__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_9__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getRightSquareBracketKeyword_9_6()); }
	']'
	{ after(grammarAccess.getAtomicLiteralAccess().getRightSquareBracketKeyword_9_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicLiteral__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_10__0__Impl
	rule__AtomicLiteral__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getSequenceDeclAction_10_0()); }
	()
	{ after(grammarAccess.getAtomicLiteralAccess().getSequenceDeclAction_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_10__1__Impl
	rule__AtomicLiteral__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getSequenceKeyword_10_1()); }
	'Sequence'
	{ after(grammarAccess.getAtomicLiteralAccess().getSequenceKeyword_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_10__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_10__2__Impl
	rule__AtomicLiteral__Group_10__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_10__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getLeftCurlyBracketKeyword_10_2()); }
	'{'
	{ after(grammarAccess.getAtomicLiteralAccess().getLeftCurlyBracketKeyword_10_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_10__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_10__3__Impl
	rule__AtomicLiteral__Group_10__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_10__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getGroup_10_3()); }
	(rule__AtomicLiteral__Group_10_3__0)?
	{ after(grammarAccess.getAtomicLiteralAccess().getGroup_10_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_10__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_10__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_10__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getRightCurlyBracketKeyword_10_4()); }
	'}'
	{ after(grammarAccess.getAtomicLiteralAccess().getRightCurlyBracketKeyword_10_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicLiteral__Group_10_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_10_3__0__Impl
	rule__AtomicLiteral__Group_10_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_10_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getExpressionsAssignment_10_3_0()); }
	(rule__AtomicLiteral__ExpressionsAssignment_10_3_0)
	{ after(grammarAccess.getAtomicLiteralAccess().getExpressionsAssignment_10_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_10_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_10_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_10_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getGroup_10_3_1()); }
	(rule__AtomicLiteral__Group_10_3_1__0)*
	{ after(grammarAccess.getAtomicLiteralAccess().getGroup_10_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicLiteral__Group_10_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_10_3_1__0__Impl
	rule__AtomicLiteral__Group_10_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_10_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getCommaKeyword_10_3_1_0()); }
	','
	{ after(grammarAccess.getAtomicLiteralAccess().getCommaKeyword_10_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_10_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_10_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_10_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getExpressionsAssignment_10_3_1_1()); }
	(rule__AtomicLiteral__ExpressionsAssignment_10_3_1_1)
	{ after(grammarAccess.getAtomicLiteralAccess().getExpressionsAssignment_10_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicLiteral__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_11__0__Impl
	rule__AtomicLiteral__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getOrderedSetDeclAction_11_0()); }
	()
	{ after(grammarAccess.getAtomicLiteralAccess().getOrderedSetDeclAction_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_11__1__Impl
	rule__AtomicLiteral__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getOrderedSetKeyword_11_1()); }
	'OrderedSet'
	{ after(grammarAccess.getAtomicLiteralAccess().getOrderedSetKeyword_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_11__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_11__2__Impl
	rule__AtomicLiteral__Group_11__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_11__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getLeftCurlyBracketKeyword_11_2()); }
	'{'
	{ after(grammarAccess.getAtomicLiteralAccess().getLeftCurlyBracketKeyword_11_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_11__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_11__3__Impl
	rule__AtomicLiteral__Group_11__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_11__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getGroup_11_3()); }
	(rule__AtomicLiteral__Group_11_3__0)?
	{ after(grammarAccess.getAtomicLiteralAccess().getGroup_11_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_11__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_11__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_11__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getRightCurlyBracketKeyword_11_4()); }
	'}'
	{ after(grammarAccess.getAtomicLiteralAccess().getRightCurlyBracketKeyword_11_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicLiteral__Group_11_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_11_3__0__Impl
	rule__AtomicLiteral__Group_11_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_11_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getExpressionsAssignment_11_3_0()); }
	(rule__AtomicLiteral__ExpressionsAssignment_11_3_0)
	{ after(grammarAccess.getAtomicLiteralAccess().getExpressionsAssignment_11_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_11_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_11_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_11_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getGroup_11_3_1()); }
	(rule__AtomicLiteral__Group_11_3_1__0)*
	{ after(grammarAccess.getAtomicLiteralAccess().getGroup_11_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicLiteral__Group_11_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_11_3_1__0__Impl
	rule__AtomicLiteral__Group_11_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_11_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getCommaKeyword_11_3_1_0()); }
	','
	{ after(grammarAccess.getAtomicLiteralAccess().getCommaKeyword_11_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_11_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_11_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_11_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getExpressionsAssignment_11_3_1_1()); }
	(rule__AtomicLiteral__ExpressionsAssignment_11_3_1_1)
	{ after(grammarAccess.getAtomicLiteralAccess().getExpressionsAssignment_11_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicLiteral__Group_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_12__0__Impl
	rule__AtomicLiteral__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getVarRefAction_12_0()); }
	()
	{ after(grammarAccess.getAtomicLiteralAccess().getVarRefAction_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicLiteral__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__Group_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicLiteralAccess().getValueAssignment_12_1()); }
	(rule__AtomicLiteral__ValueAssignment_12_1)
	{ after(grammarAccess.getAtomicLiteralAccess().getValueAssignment_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group__0__Impl
	rule__Param__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getTypeAssignment_0()); }
	(rule__Param__TypeAssignment_0)
	{ after(grammarAccess.getParamAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getNameAssignment_1()); }
	(rule__Param__NameAssignment_1)
	{ after(grammarAccess.getParamAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_1__0__Impl
	rule__Type__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getOutOfScopeTypeAction_1_0()); }
	()
	{ after(grammarAccess.getTypeAccess().getOutOfScopeTypeAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getExternalClassAssignment_1_1()); }
	(rule__Type__ExternalClassAssignment_1_1)
	{ after(grammarAccess.getTypeAccess().getExternalClassAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getSequenceTypeAction_2_0()); }
	()
	{ after(grammarAccess.getTypeAccess().getSequenceTypeAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__1__Impl
	rule__Type__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getSequenceKeyword_2_1()); }
	'Sequence'
	{ after(grammarAccess.getTypeAccess().getSequenceKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__2__Impl
	rule__Type__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_2()); }
	'('
	{ after(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__3__Impl
	rule__Type__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getSubTypeAssignment_2_3()); }
	(rule__Type__SubTypeAssignment_2_3)
	{ after(grammarAccess.getTypeAccess().getSubTypeAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_4()); }
	')'
	{ after(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_3__0__Impl
	rule__Type__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getOrderedSetTypeAction_3_0()); }
	()
	{ after(grammarAccess.getTypeAccess().getOrderedSetTypeAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_3__1__Impl
	rule__Type__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getOrderedSetKeyword_3_1()); }
	'OrderedSet'
	{ after(grammarAccess.getTypeAccess().getOrderedSetKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_3__2__Impl
	rule__Type__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_3_2()); }
	'('
	{ after(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_3__3__Impl
	rule__Type__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getSubTypeAssignment_3_3()); }
	(rule__Type__SubTypeAssignment_3_3)
	{ after(grammarAccess.getTypeAccess().getSubTypeAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getRightParenthesisKeyword_3_4()); }
	')'
	{ after(grammarAccess.getTypeAccess().getRightParenthesisKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Qualified__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Qualified__Group__0__Impl
	rule__Qualified__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualified__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualified__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Qualified__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualified__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedAccess().getGroup_1()); }
	(rule__Qualified__Group_1__0)*
	{ after(grammarAccess.getQualifiedAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Qualified__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Qualified__Group_1__0__Impl
	rule__Qualified__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualified__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualified__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Qualified__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualified__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSystem__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSystem__Group_0__0__Impl
	rule__TypeSystem__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSystemAccess().getBooleanTypeTAction_0_0()); }
	()
	{ after(grammarAccess.getTypeSystemAccess().getBooleanTypeTAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSystem__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSystemAccess().getBooleanKeyword_0_1()); }
	'Boolean'
	{ after(grammarAccess.getTypeSystemAccess().getBooleanKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSystem__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSystem__Group_1__0__Impl
	rule__TypeSystem__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSystemAccess().getFLoatTypeTAction_1_0()); }
	()
	{ after(grammarAccess.getTypeSystemAccess().getFLoatTypeTAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSystem__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSystemAccess().getFloatKeyword_1_1()); }
	'Float'
	{ after(grammarAccess.getTypeSystemAccess().getFloatKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSystem__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSystem__Group_2__0__Impl
	rule__TypeSystem__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSystemAccess().getIntTypeTAction_2_0()); }
	()
	{ after(grammarAccess.getTypeSystemAccess().getIntTypeTAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSystem__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSystemAccess().getIntKeyword_2_1()); }
	'Int'
	{ after(grammarAccess.getTypeSystemAccess().getIntKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSystem__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSystem__Group_3__0__Impl
	rule__TypeSystem__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSystemAccess().getStringTypeTAction_3_0()); }
	()
	{ after(grammarAccess.getTypeSystemAccess().getStringTypeTAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSystem__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSystemAccess().getStringKeyword_3_1()); }
	'String'
	{ after(grammarAccess.getTypeSystemAccess().getStringKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSystem__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSystem__Group_4__0__Impl
	rule__TypeSystem__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSystemAccess().getNullTypeTAction_4_0()); }
	()
	{ after(grammarAccess.getTypeSystemAccess().getNullTypeTAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSystem__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSystemAccess().getNulltypeKeyword_4_1()); }
	'nulltype'
	{ after(grammarAccess.getTypeSystemAccess().getNulltypeKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSystem__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSystem__Group_5__0__Impl
	rule__TypeSystem__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSystemAccess().getSequenceTypeTAction_5_0()); }
	()
	{ after(grammarAccess.getTypeSystemAccess().getSequenceTypeTAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSystem__Group_5__1__Impl
	rule__TypeSystem__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSystemAccess().getSequenceKeyword_5_1()); }
	'Sequence'
	{ after(grammarAccess.getTypeSystemAccess().getSequenceKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSystem__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSystemAccess().getSubTypeAssignment_5_2()); }
	(rule__TypeSystem__SubTypeAssignment_5_2)
	{ after(grammarAccess.getTypeSystemAccess().getSubTypeAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSystem__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSystem__Group_6__0__Impl
	rule__TypeSystem__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSystemAccess().getClassTypeTAction_6_0()); }
	()
	{ after(grammarAccess.getTypeSystemAccess().getClassTypeTAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSystem__Group_6__1__Impl
	rule__TypeSystem__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSystemAccess().getClassKeyword_6_1()); }
	'class'
	{ after(grammarAccess.getTypeSystemAccess().getClassKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSystem__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSystemAccess().getClazzAssignment_6_2()); }
	(rule__TypeSystem__ClazzAssignment_6_2)
	{ after(grammarAccess.getTypeSystemAccess().getClazzAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Root__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootAccess().getNameQualifiedParserRuleCall_1_0()); }
		ruleQualified
		{ after(grammarAccess.getRootAccess().getNameQualifiedParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__SuperAleAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootAccess().getSuperAleQualifiedParserRuleCall_2_1_0()); }
		ruleQualified
		{ after(grammarAccess.getRootAccess().getSuperAleQualifiedParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__SuperAleAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootAccess().getSuperAleQualifiedParserRuleCall_2_2_1_0()); }
		ruleQualified
		{ after(grammarAccess.getRootAccess().getSuperAleQualifiedParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__ImportsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootAccess().getImportsImportParserRuleCall_4_0()); }
		ruleImport
		{ after(grammarAccess.getRootAccess().getImportsImportParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__ClassesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootAccess().getClassesAleClassParserRuleCall_5_0()); }
		ruleAleClass
		{ after(grammarAccess.getRootAccess().getClassesAleClassParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getRefRootCrossReference_1_0()); }
		(
			{ before(grammarAccess.getImportAccess().getRefRootIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getImportAccess().getRefRootIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getImportAccess().getRefRootCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpenClassAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getOpenClassAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__SuperClassAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpenClassAccess().getSuperClassQualifiedParserRuleCall_4_1_0()); }
		ruleQualified
		{ after(grammarAccess.getOpenClassAccess().getSuperClassQualifiedParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__SuperClassAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpenClassAccess().getSuperClassQualifiedParserRuleCall_4_2_1_0()); }
		ruleQualified
		{ after(grammarAccess.getOpenClassAccess().getSuperClassQualifiedParserRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__FieldsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpenClassAccess().getFieldsFieldParserRuleCall_5_1_0()); }
		ruleField
		{ after(grammarAccess.getOpenClassAccess().getFieldsFieldParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenClass__MethodsAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpenClassAccess().getMethodsMethodParserRuleCall_5_2_0()); }
		ruleMethod
		{ after(grammarAccess.getOpenClassAccess().getMethodsMethodParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNewClassAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getNewClassAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__SuperClassAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNewClassAccess().getSuperClassQualifiedParserRuleCall_3_1_0()); }
		ruleQualified
		{ after(grammarAccess.getNewClassAccess().getSuperClassQualifiedParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__SuperClassAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNewClassAccess().getSuperClassQualifiedParserRuleCall_3_2_1_0()); }
		ruleQualified
		{ after(grammarAccess.getNewClassAccess().getSuperClassQualifiedParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__FieldsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNewClassAccess().getFieldsFieldParserRuleCall_4_1_0()); }
		ruleField
		{ after(grammarAccess.getNewClassAccess().getFieldsFieldParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClass__MethodsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNewClassAccess().getMethodsMethodParserRuleCall_4_2_0()); }
		ruleMethod
		{ after(grammarAccess.getNewClassAccess().getMethodsMethodParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getTypeTypeParserRuleCall_0_1_0()); }
		ruleType
		{ after(grammarAccess.getFieldAccess().getTypeTypeParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_0_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getTypeTypeParserRuleCall_1_2_0()); }
		ruleType
		{ after(grammarAccess.getFieldAccess().getTypeTypeParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_3_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__ReverseAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getReverseIDTerminalRuleCall_1_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccess().getReverseIDTerminalRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getTypeTypeParserRuleCall_2_2_0()); }
		ruleType
		{ after(grammarAccess.getFieldAccess().getTypeTypeParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_2_3_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__TagsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefMethodAccess().getTagsTagParserRuleCall_0_0()); }
		ruleTag
		{ after(grammarAccess.getDefMethodAccess().getTagsTagParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__TypeAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefMethodAccess().getTypeTypeParserRuleCall_2_0_0()); }
		ruleType
		{ after(grammarAccess.getDefMethodAccess().getTypeTypeParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefMethodAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getDefMethodAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__ParamsAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefMethodAccess().getParamsParamParserRuleCall_4_1_0_0()); }
		ruleParam
		{ after(grammarAccess.getDefMethodAccess().getParamsParamParserRuleCall_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__ParamsAssignment_4_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefMethodAccess().getParamsParamParserRuleCall_4_1_1_1_0()); }
		ruleParam
		{ after(grammarAccess.getDefMethodAccess().getParamsParamParserRuleCall_4_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefMethod__BlockAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefMethodAccess().getBlockBlockParserRuleCall_5_0()); }
		ruleBlock
		{ after(grammarAccess.getDefMethodAccess().getBlockBlockParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__TagsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOverrideMethodAccess().getTagsTagParserRuleCall_0_0()); }
		ruleTag
		{ after(grammarAccess.getOverrideMethodAccess().getTagsTagParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOverrideMethodAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getOverrideMethodAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOverrideMethodAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getOverrideMethodAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__ParamsAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOverrideMethodAccess().getParamsParamParserRuleCall_4_1_0_0()); }
		ruleParam
		{ after(grammarAccess.getOverrideMethodAccess().getParamsParamParserRuleCall_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__ParamsAssignment_4_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOverrideMethodAccess().getParamsParamParserRuleCall_4_1_1_1_0()); }
		ruleParam
		{ after(grammarAccess.getOverrideMethodAccess().getParamsParamParserRuleCall_4_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideMethod__BlockAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOverrideMethodAccess().getBlockBlockParserRuleCall_5_0()); }
		ruleBlock
		{ after(grammarAccess.getOverrideMethodAccess().getBlockBlockParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DebugStatement__ExprAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDebugStatementAccess().getExprExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getDebugStatementAccess().getExprExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__ReturnedAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnStatementAccess().getReturnedExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getReturnStatementAccess().getReturnedExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__BindingsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetStatementAccess().getBindingsVarAssignParserRuleCall_2_0()); }
		ruleVarAssign
		{ after(grammarAccess.getLetStatementAccess().getBindingsVarAssignParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__BindingsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetStatementAccess().getBindingsVarAssignParserRuleCall_3_1_0()); }
		ruleVarAssign
		{ after(grammarAccess.getLetStatementAccess().getBindingsVarAssignParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetStatement__BlockAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetStatementAccess().getBlockAlternatives_5_0()); }
		(rule__LetStatement__BlockAlternatives_5_0)
		{ after(grammarAccess.getLetStatementAccess().getBlockAlternatives_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ConditionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getConditionExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getIfStatementAccess().getConditionExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ThenBranchAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getThenBranchBlockParserRuleCall_5_0()); }
		ruleBlock
		{ after(grammarAccess.getIfStatementAccess().getThenBranchBlockParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseBranchAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getElseBranchBlockParserRuleCall_6_1_0()); }
		ruleBlock
		{ after(grammarAccess.getIfStatementAccess().getElseBranchBlockParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__ConditionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getConditionExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getWhileStatementAccess().getConditionExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__WhileBlockAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getWhileBlockBlockParserRuleCall_5_0()); }
		ruleBlock
		{ after(grammarAccess.getWhileStatementAccess().getWhileBlockBlockParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getTypeTypeParserRuleCall_3_0()); }
		ruleType
		{ after(grammarAccess.getForLoopAccess().getTypeTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getForLoopAccess().getNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__CollectionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getCollectionExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getForLoopAccess().getCollectionExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__BlockAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getBlockBlockParserRuleCall_8_0()); }
		ruleBlock
		{ after(grammarAccess.getForLoopAccess().getBlockBlockParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__BodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getBodyStatementParserRuleCall_2_0()); }
		ruleStatement
		{ after(grammarAccess.getBlockAccess().getBodyStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAssignAccess().getTypeTypeParserRuleCall_0_1_0()); }
		ruleType
		{ after(grammarAccess.getVarAssignAccess().getTypeTypeParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__NameAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAssignAccess().getNameIDTerminalRuleCall_0_2_0()); }
		RULE_ID
		{ after(grammarAccess.getVarAssignAccess().getNameIDTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__ValueAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAssignAccess().getValueExpressionParserRuleCall_0_4_0()); }
		ruleExpression
		{ after(grammarAccess.getVarAssignAccess().getValueExpressionParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAssignAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVarAssignAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAssign__ValueAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAssignAccess().getValueExpressionParserRuleCall_1_3_0()); }
		ruleExpression
		{ after(grammarAccess.getVarAssignAccess().getValueExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesOperation__RightAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImpliesOperationAccess().getRightBooleanOperationParserRuleCall_1_0_1_0()); }
		ruleBooleanOperation
		{ after(grammarAccess.getImpliesOperationAccess().getRightBooleanOperationParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperation__RightAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanOperationAccess().getRightCompareOperationParserRuleCall_1_0_1_0()); }
		ruleCompareOperation
		{ after(grammarAccess.getBooleanOperationAccess().getRightCompareOperationParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__RightAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareOperationAccess().getRightEqualityOperationParserRuleCall_1_0_1_0()); }
		ruleEqualityOperation
		{ after(grammarAccess.getCompareOperationAccess().getRightEqualityOperationParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOperation__OpAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityOperationAccess().getOpEqualsSignEqualsSignKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getEqualityOperationAccess().getOpEqualsSignEqualsSignKeyword_1_0_1_0()); }
			'=='
			{ after(grammarAccess.getEqualityOperationAccess().getOpEqualsSignEqualsSignKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getEqualityOperationAccess().getOpEqualsSignEqualsSignKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOperation__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityOperationAccess().getRightMultOperationParserRuleCall_1_0_2_0()); }
		ruleMultOperation
		{ after(grammarAccess.getEqualityOperationAccess().getRightMultOperationParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__RightAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultOperationAccess().getRightAddOperationParserRuleCall_1_0_1_0()); }
		ruleAddOperation
		{ after(grammarAccess.getMultOperationAccess().getRightAddOperationParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOperation__RightAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddOperationAccess().getRightChaindedCallParserRuleCall_1_0_1_0()); }
		ruleChaindedCall
		{ after(grammarAccess.getAddOperationAccess().getRightChaindedCallParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaindedCall__RightAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChaindedCallAccess().getRightInfixOperationParserRuleCall_1_0_1_0()); }
		ruleInfixOperation
		{ after(grammarAccess.getChaindedCallAccess().getRightInfixOperationParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__ExpressionAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixOperationAccess().getExpressionExpressionParserRuleCall_0_2_0()); }
		ruleExpression
		{ after(grammarAccess.getInfixOperationAccess().getExpressionExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixOperationAccess().getExpressionExpressionParserRuleCall_1_2_0()); }
		ruleExpression
		{ after(grammarAccess.getInfixOperationAccess().getExpressionExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__TypeAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixOperationAccess().getTypeTypeParserRuleCall_2_3_0()); }
		ruleType
		{ after(grammarAccess.getInfixOperationAccess().getTypeTypeParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__NameAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixOperationAccess().getNameIDTerminalRuleCall_3_2_0()); }
		RULE_ID
		{ after(grammarAccess.getInfixOperationAccess().getNameIDTerminalRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__NameAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixOperationAccess().getNameIDTerminalRuleCall_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInfixOperationAccess().getNameIDTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__ParametersAssignment_4_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixOperationAccess().getParametersParamCallParserRuleCall_4_2_1_0_0()); }
		ruleParamCall
		{ after(grammarAccess.getInfixOperationAccess().getParametersParamCallParserRuleCall_4_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperation__ParametersAssignment_4_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixOperationAccess().getParametersParamCallParserRuleCall_4_2_1_1_1_0()); }
		ruleParamCall
		{ after(grammarAccess.getInfixOperationAccess().getParametersParamCallParserRuleCall_4_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCall__LambdaAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamCallAccess().getLambdaIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParamCallAccess().getLambdaIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCall__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamCallAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getParamCallAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__ExpAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getExpExpressionParserRuleCall_1_3_0()); }
		ruleExpression
		{ after(grammarAccess.getAtomicLiteralAccess().getExpExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__ValueAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getValueSTRINGTerminalRuleCall_4_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtomicLiteralAccess().getValueSTRINGTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__ValueAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getValueINTTerminalRuleCall_5_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicLiteralAccess().getValueINTTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__ValueAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getValueREALTerminalRuleCall_6_1_0()); }
		RULE_REAL
		{ after(grammarAccess.getAtomicLiteralAccess().getValueREALTerminalRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__ValueAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getValueBOOLEANTerminalRuleCall_7_1_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getAtomicLiteralAccess().getValueBOOLEANTerminalRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__StartAssignment_9_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getStartExpressionParserRuleCall_9_2_0()); }
		ruleExpression
		{ after(grammarAccess.getAtomicLiteralAccess().getStartExpressionParserRuleCall_9_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__StopAssignment_9_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getStopExpressionParserRuleCall_9_5_0()); }
		ruleExpression
		{ after(grammarAccess.getAtomicLiteralAccess().getStopExpressionParserRuleCall_9_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__ExpressionsAssignment_10_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getExpressionsExpressionParserRuleCall_10_3_0_0()); }
		ruleExpression
		{ after(grammarAccess.getAtomicLiteralAccess().getExpressionsExpressionParserRuleCall_10_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__ExpressionsAssignment_10_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getExpressionsExpressionParserRuleCall_10_3_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getAtomicLiteralAccess().getExpressionsExpressionParserRuleCall_10_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__ExpressionsAssignment_11_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getExpressionsExpressionParserRuleCall_11_3_0_0()); }
		ruleExpression
		{ after(grammarAccess.getAtomicLiteralAccess().getExpressionsExpressionParserRuleCall_11_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__ExpressionsAssignment_11_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getExpressionsExpressionParserRuleCall_11_3_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getAtomicLiteralAccess().getExpressionsExpressionParserRuleCall_11_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicLiteral__ValueAssignment_12_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicLiteralAccess().getValueIDTerminalRuleCall_12_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAtomicLiteralAccess().getValueIDTerminalRuleCall_12_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getParamAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParamAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__ExternalClassAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getExternalClassIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeAccess().getExternalClassIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__SubTypeAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getSubTypeTypeParserRuleCall_2_3_0()); }
		ruleType
		{ after(grammarAccess.getTypeAccess().getSubTypeTypeParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__SubTypeAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getSubTypeTypeParserRuleCall_3_3_0()); }
		ruleType
		{ after(grammarAccess.getTypeAccess().getSubTypeTypeParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralType__LitAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralTypeAccess().getLitAlternatives_0()); }
		(rule__LiteralType__LitAlternatives_0)
		{ after(grammarAccess.getLiteralTypeAccess().getLitAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__SubTypeAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSystemAccess().getSubTypeTypeSystemParserRuleCall_5_2_0()); }
		ruleTypeSystem
		{ after(grammarAccess.getTypeSystemAccess().getSubTypeTypeSystemParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSystem__ClazzAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSystemAccess().getClazzAleClassCrossReference_6_2_0()); }
		(
			{ before(grammarAccess.getTypeSystemAccess().getClazzAleClassIDTerminalRuleCall_6_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTypeSystemAccess().getClazzAleClassIDTerminalRuleCall_6_2_0_1()); }
		)
		{ after(grammarAccess.getTypeSystemAccess().getClazzAleClassCrossReference_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_REAL : ('0'..'9')+ '.' ('0'..'9')+;

RULE_BOOLEAN : ('true'|'false');

RULE_NULL : 'null';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
