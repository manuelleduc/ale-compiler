<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename type &apos;ale.compiler.DSLCompiler&apos; to &apos;AleCompiler&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Original element: &apos;ale.compiler.DSLCompiler&apos;&#x0A;- Renamed element: &apos;ale.compiler.AleCompiler&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;DSLCompiler&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;ale.compiler{DSLCompiler.java[DSLCompiler" matchStrategy="1" name="AleCompiler" qualified="false" references="true" similarDeclarations="false" stamp="1491415455521" textual="false" version="1.0"/>&#x0A;<refactoring comment="Inline local variable &apos;ale.compiler.AleCompiler.load().res&apos; in &apos;ale.compiler.AleCompiler.load()&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Original element: &apos;ale.compiler.AleCompiler.load().res&apos;" description="Inline local variable &apos;res&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;ale.compiler{AleCompiler.java" selection="5219 78" stamp="1491419707254" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;baBehavior&apos; in &apos;ale.compiler.AleCompiler.compile(...)&apos; to &apos;behavior&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Original element: &apos;ale.compiler.AleCompiler.compile(IProject).baBehavior&apos;&#x0A;- Renamed element: &apos;baBehavior&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;baBehavior&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;ale.compiler{AleCompiler.java[AleCompiler~compile~QIProject;@baBehavior!6269!6298!6278!6287!QBehavior;!0!false" name="behavior" references="true" stamp="1491420061009" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;dslStandaloneSetup&apos; from expression &apos;new DslStandaloneSetup()&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Variable name: &apos;dslStandaloneSetup&apos;&#x0A;- Destination method: &apos;ale.compiler.AleCompiler.compile()&apos;&#x0A;- Variable expression: &apos;new DslStandaloneSetup()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;dslStandaloneSetup&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;ale.compiler{AleCompiler.java" name="dslStandaloneSetup" replace="true" selection="5598 24" stamp="1491420580798" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Inline local variable &apos;ale.compiler.AleCompiler.compile().dslStandaloneSetup&apos; in &apos;ale.compiler.AleCompiler.compile()&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Original element: &apos;ale.compiler.AleCompiler.compile().dslStandaloneSetup&apos;" description="Inline local variable &apos;dslStandaloneSetup&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;ale.compiler{AleCompiler.java" selection="5579 45" stamp="1491420701159" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;value&apos; from expression &apos;behavior.getValue()&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Variable name: &apos;value&apos;&#x0A;- Destination method: &apos;ale.compiler.AleCompiler.compile()&apos;&#x0A;- Variable expression: &apos;behavior.getValue()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;value&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;ale.compiler{AleCompiler.java" name="value" replace="true" selection="7591 19" stamp="1491420994519" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;createInjector&apos; from expression &apos;Guice.createInjector(new AleRuntimeModule())&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Variable name: &apos;createInjector&apos;&#x0A;- Destination method: &apos;ale.compiler.AleCompiler.compile()&apos;&#x0A;- Variable expression: &apos;Guice.createInjector(new AleRuntimeModule())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;createInjector&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;ale.compiler{AleCompiler.java" name="createInjector" replace="true" selection="6164 44" stamp="1491421290424" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;createInjector&apos; from expression &apos;Guice.createInjector(new AleRuntimeModule())&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Variable name: &apos;createInjector&apos;&#x0A;- Destination method: &apos;ale.compiler.AleCompiler.compile()&apos;&#x0A;- Variable expression: &apos;Guice.createInjector(new AleRuntimeModule())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;createInjector&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;ale.compiler{AleCompiler.java" name="createInjector" replace="true" selection="5825 44" stamp="1491421543954" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;createURI&apos; from expression &apos;URI.createURI(value)&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Variable name: &apos;createURI&apos;&#x0A;- Destination method: &apos;ale.compiler.AleCompiler.compile()&apos;&#x0A;- Variable expression: &apos;URI.createURI(value)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;createURI&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;ale.compiler{AleCompiler.java" name="createURI" replace="true" selection="7459 20" stamp="1491423708625" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;resolveType&apos; from expression &apos;resolveType(variableDecl.getType())&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Variable name: &apos;resolveType&apos;&#x0A;- Destination method: &apos;ale.compiler.AleCompiler.generateDynamicModel()&apos;&#x0A;- Variable expression: &apos;resolveType(variableDecl.getType())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;resolveType&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;ale.compiler{AleCompiler.java" name="resolveType" replace="true" selection="11289 35" stamp="1491424967966" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;createEAttribute&apos; from expression &apos;EcoreFactory.eINSTANCE.createEAttribute()&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Variable name: &apos;createEAttribute&apos;&#x0A;- Destination method: &apos;ale.compiler.AleCompiler.generateDynamicModel()&apos;&#x0A;- Variable expression: &apos;EcoreFactory.eINSTANCE.createEAttribute()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;createEAttribute&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;ale.compiler{AleCompiler.java" name="createEAttribute" replace="true" selection="11344 41" stamp="1491425069217" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private Root extracted(XtextResourceSet resourceSet, Behavior behavior)&apos; from &apos;ale.compiler.AleCompiler.compile()&apos; to &apos;ale.compiler.AleCompiler&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Method name: &apos;extracted&apos;&#x0A;- Destination type: &apos;ale.compiler.AleCompiler&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;ale.compiler{AleCompiler.java" name="extracted" replace="false" selection="6508 674" stamp="1491429287901" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract local variable &apos;listAllClasses&apos; from expression &apos;new GenerateAlgebra().getListAllClasses(rootPackage)&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Variable name: &apos;listAllClasses&apos;&#x0A;- Destination method: &apos;ale.compiler.AleCompiler.compile()&apos;&#x0A;- Variable expression: &apos;new GenerateAlgebra().getListAllClasses(rootPackage)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;listAllClasses&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;ale.compiler{AleCompiler.java" name="listAllClasses" replace="true" selection="6963 52" stamp="1491429724414" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;dynamicModelPackage&apos; in &apos;ale.compiler.AleCompiler.compile(...)&apos; to &apos;rootPackage&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Original element: &apos;ale.compiler.AleCompiler.compile(IProject).dynamicModelPackage&apos;&#x0A;- Renamed element: &apos;dynamicModelPackage&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;dynamicModelPackage&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;ale.compiler{AleCompiler.java[AleCompiler~compile~QIProject;@dynamicModelPackage!6030!6106!6045!6063!QEPackage;!67108880!false" name="rootPackage" references="true" stamp="1491460595928" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;name&apos; from expression &apos;clazz.getName()&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Variable name: &apos;name&apos;&#x0A;- Destination method: &apos;ale.compiler.AleCompiler.compile()&apos;&#x0A;- Variable expression: &apos;clazz.getName()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;name&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;ale.compiler{AleCompiler.java" name="name" replace="true" selection="7029 15" stamp="1491463519230" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;name2&apos; from expression &apos;b.getName()&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Variable name: &apos;name2&apos;&#x0A;- Destination method: &apos;ale.compiler.AleCompiler.compile()&apos;&#x0A;- Variable expression: &apos;b.getName()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;name2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;ale.compiler{AleCompiler.java" name="name2" replace="true" selection="7047 11" stamp="1491463533762" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;behaviorClass&apos; in &apos;ale.compiler.AleCompiler.compile(...).() -&gt; {...} Consumer.accept(...)&apos; to &apos;openClass&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Original element: &apos;ale.compiler.AleCompiler.compile(...).() -&gt; {...} Consumer.accept(EClass).behaviorClass&apos;&#x0A;- Renamed element: &apos;behaviorClass&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;behaviorClass&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;ale.compiler{AleCompiler.java[AleCompiler~compile~QIProject;=)=&quot;Ljava.util.function.Consumer\&lt;Lorg.eclipse.emf.ecore.EClass;&gt;;!6815!7315!6822=&amp;accept!1=&quot;Lorg.eclipse.emf.ecore.EClass;=&quot;clazz=&quot;V=&quot;Ljava\/util\/function\/Consumer\&lt;Lorg\/eclipse\/emf\/ecore\/EClass;&gt;;.accept\(Lorg\/eclipse\/emf\/ecore\/EClass;)V@clazz!6815!6819!6815!6819!Lorg\/eclipse\/emf\/ecore\/EClass;!0!true=&amp;@behaviorClass!6829!7159!6845!6857!QOpenClass;!67108880!false" name="openClass" references="true" stamp="1491466348166" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private OpenClass lookupOpenClas(final XtextResourceSet resourceSet, final EList&lt;Behavior&gt; behaviors, XtextResourceSet clazz)&apos; from &apos;ale.compiler.AleCompiler.compile()&apos; to &apos;ale.compiler.AleCompiler&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Method name: &apos;lookupOpenClas&apos;&#x0A;- Destination type: &apos;ale.compiler.AleCompiler&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;lookupOpenClas&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;ale.compiler{AleCompiler.java" name="lookupOpenClas" replace="false" selection="6829 327" stamp="1491466357445" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename method &apos;ale.compiler.AleCompiler.lookupOpenClas(...)&apos; to &apos;lookupOpenClass&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Original element: &apos;ale.compiler.AleCompiler.lookupOpenClas(...)&apos;&#x0A;- Renamed element: &apos;ale.compiler.AleCompiler.lookupOpenClass(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;lookupOpenClas&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;ale.compiler{AleCompiler.java[AleCompiler~lookupOpenClas~QXtextResourceSet;~QEList\&lt;QBehavior;&gt;;~QXtextResourceSet;" name="lookupOpenClass" references="true" stamp="1491466365368" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;name&apos; in &apos;ale.compiler.AleCompiler.lookupOpenClass(...)&apos; to &apos;className&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Original element: &apos;ale.compiler.AleCompiler.lookupOpenClass(XtextResourceSet, EList&lt;Behavior&gt;, EClass).name&apos;&#x0A;- Renamed element: &apos;name&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;name&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;ale.compiler{AleCompiler.java[AleCompiler~lookupOpenClass~QXtextResourceSet;~QEList\&lt;QBehavior;&gt;;~QEClass;@name!7297!7326!7304!7307!QString;!0!false" name="className" references="true" stamp="1491481422992" version="1.0"/>&#x0A;<refactoring comment="Inline local variable &apos;ale.compiler.AleCompiler.convertBehviorToRoot().value&apos; in &apos;ale.compiler.AleCompiler.convertBehviorToRoot()&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Original element: &apos;ale.compiler.AleCompiler.convertBehviorToRoot().value&apos;" description="Inline local variable &apos;value&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;ale.compiler{AleCompiler.java" selection="7998 27" stamp="1491481494207" version="1.0"/>&#x0A;<refactoring comment="Inline local variable &apos;ale.compiler.AleCompiler.convertBehviorToRoot().root&apos; in &apos;ale.compiler.AleCompiler.convertBehviorToRoot()&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Original element: &apos;ale.compiler.AleCompiler.convertBehviorToRoot().root&apos;" description="Inline local variable &apos;root&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;ale.compiler{AleCompiler.java" selection="8127 44" stamp="1491481498747" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;externalClass&apos; from expression &apos;((OutOfScopeType)type).getExternalClass()&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Variable name: &apos;externalClass&apos;&#x0A;- Destination method: &apos;ale.compiler.AleCompiler.resolveType()&apos;&#x0A;- Variable expression: &apos;((OutOfScopeType)type).getExternalClass()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;externalClass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;ale.compiler{AleCompiler.java" name="externalClass" replace="true" selection="14070 42" stamp="1491482037272" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;allClasses&apos; from expression &apos;new GenerateAlgebra().allClasses(ePackage)&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Variable name: &apos;allClasses&apos;&#x0A;- Destination method: &apos;ale.compiler.AleCompiler.resolveType()&apos;&#x0A;- Variable expression: &apos;new GenerateAlgebra().allClasses(ePackage)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;allClasses&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;ale.compiler{AleCompiler.java" name="allClasses" replace="true" selection="14406 42" stamp="1491482991506" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;dynamicModelPackage&apos; in &apos;ale.compiler.AleCompiler.generateDynamicModel(...)&apos; to &apos;rootPackage&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Original element: &apos;ale.compiler.AleCompiler.generateDynamicModel(String, ResourceSet, Root, EPackage, XtextResourceSet, EList&lt;Behavior&gt;).dynamicModelPackage&apos;&#x0A;- Renamed element: &apos;dynamicModelPackage&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;dynamicModelPackage&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;ale.compiler{AleCompiler.java[AleCompiler~generateDynamicModel~QString;~QResourceSet;~QRoot;~QEPackage;~QXtextResourceSet;~QEList\&lt;QBehavior;&gt;;@dynamicModelPackage!11038!11071!11053!11071!QEPackage;!16!true" name="rootPackage" references="true" stamp="1491483254016" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;generateAlgebra&apos; from expression &apos;new GenerateAlgebra()&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Variable name: &apos;generateAlgebra&apos;&#x0A;- Destination method: &apos;ale.compiler.AleCompiler.resolveType()&apos;&#x0A;- Variable expression: &apos;new GenerateAlgebra()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;generateAlgebra&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;ale.compiler{AleCompiler.java" name="generateAlgebra" replace="true" selection="14406 21" stamp="1491483535113" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;openClass&apos; in &apos;ale.compiler.AleCompiler.lookupClass(...)&apos; to &apos;clazz&apos;&#x0A;- Original project: &apos;ale.compiler&apos;&#x0A;- Original element: &apos;ale.compiler.AleCompiler.lookupClass(XtextResourceSet, EList&lt;Behavior&gt;, String).openClass&apos;&#x0A;- Renamed element: &apos;openClass&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;openClass&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;ale.compiler{AleCompiler.java[AleCompiler~lookupClass~QXtextResourceSet;~QEList\&lt;QBehavior;&gt;;~QString;@openClass!7388!7657!7414!7422!Qale.xtext.ale.Class;!67108880!false" name="clazz" references="true" stamp="1491486963457" version="1.0"/>
</session>