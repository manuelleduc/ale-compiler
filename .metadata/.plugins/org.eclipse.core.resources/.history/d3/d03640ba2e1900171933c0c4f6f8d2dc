/*
 * generated by Xtext 2.10.0
 */
package ale.xtext.scoping

import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import org.eclipse.xtext.scoping.IScope
import ale.xtext.ale.OpenClass
import ale.xtext.ale.AlePackage
import org.eclipse.xtext.scoping.Scopes
import ale.xtext.ale.Root
import java.util.function.Function

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class AleScopeProvider extends AbstractAleScopeProvider {
	override IScope getScope(EObject context, EReference reference) {
		if (context instanceof OpenClass) {
			if (reference == AlePackage::eINSTANCE.class_SuperClass) {
				val tmp = super.getScope(context, reference)
				val imports = (context.eContainer as Root).imports.map[i | i.ref.classes].flatten
				return Scopes::scopeFor(imports, new Function<Class, String>() {
					
					override apply(Class t) {
						throw new UnsupportedOperationException("TODO: auto-generated method stub")
					}
					
				}, tmp)
			}
		}
		return super.getScope(context, reference)
	}
}
