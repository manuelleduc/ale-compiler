/*
 * generated by Xtext 2.10.0
 */
package ale.xtext.generator

import ale.xtext.AleType
import ale.xtext.ale.Statement
import com.google.inject.Inject
import it.xsemantics.runtime.RuleApplicationTrace
import it.xsemantics.runtime.TraceUtils
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class AleGenerator extends AbstractGenerator {

	@Inject AleType semantics
	
	@Inject extension TraceUtils

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		fsa.generateFile('debug.txt', '' + resource.allContents.filter(typeof(Statement)).map [ e |
			val typeTrace = new RuleApplicationTrace()
			val type = semantics.type(null, typeTrace, e)
			'''
			«e» -> «type.value»
			«typeTrace.traceAsString»
			'''
			

		].join(System.lineSeparator + '------------------------' + System.lineSeparator))
	}
}
